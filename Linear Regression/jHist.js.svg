<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     xmlns:gadfly="http://www.gadflyjl.org/ns"
     version="1.2"
     width="152.4mm" height="152.4mm" viewBox="0 0 152.4 152.4"
     stroke="none"
     fill="#000000"
     stroke-width="0.3"
     font-size="3.88"

     id="img-0cadd079">
<g class="plotroot xscalable yscalable" id="img-0cadd079-1">
  <g font-size="3.88" font-family="'PT Sans','Helvetica Neue','Helvetica',sans-serif" fill="#564A55" stroke="#000000" stroke-opacity="0.000" id="img-0cadd079-2">
    <text x="88.25" y="140.79" text-anchor="middle" dy="0.6em">Iterations</text>
  </g>
  <g class="guide xlabels" font-size="2.82" font-family="'PT Sans Caption','Helvetica Neue','Helvetica',sans-serif" fill="#6C606B" id="img-0cadd079-3">
    <text x="-111.78" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">-5×10³</text>
    <text x="-83.2" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">-4×10³</text>
    <text x="-54.63" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">-3×10³</text>
    <text x="-26.05" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">-2×10³</text>
    <text x="2.52" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">-1×10³</text>
    <text x="31.1" y="136.79" text-anchor="middle" visibility="visible" gadfly:scale="1.0">0</text>
    <text x="59.67" y="136.79" text-anchor="middle" visibility="visible" gadfly:scale="1.0">1×10³</text>
    <text x="88.25" y="136.79" text-anchor="middle" visibility="visible" gadfly:scale="1.0">2×10³</text>
    <text x="116.82" y="136.79" text-anchor="middle" visibility="visible" gadfly:scale="1.0">3×10³</text>
    <text x="145.4" y="136.79" text-anchor="middle" visibility="visible" gadfly:scale="1.0">4×10³</text>
    <text x="173.98" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">5×10³</text>
    <text x="202.55" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">6×10³</text>
    <text x="231.13" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">7×10³</text>
    <text x="259.7" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">8×10³</text>
    <text x="288.28" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="1.0">9×10³</text>
    <text x="-83.2" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-4.0×10³</text>
    <text x="-77.49" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-3.8×10³</text>
    <text x="-71.77" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-3.6×10³</text>
    <text x="-66.06" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-3.4×10³</text>
    <text x="-60.34" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-3.2×10³</text>
    <text x="-54.63" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-3.0×10³</text>
    <text x="-48.91" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-2.8×10³</text>
    <text x="-43.2" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-2.6×10³</text>
    <text x="-37.48" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-2.4×10³</text>
    <text x="-31.77" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-2.2×10³</text>
    <text x="-26.05" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-2.0×10³</text>
    <text x="-20.34" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-1.8×10³</text>
    <text x="-14.62" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-1.6×10³</text>
    <text x="-8.91" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-1.4×10³</text>
    <text x="-3.19" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-1.2×10³</text>
    <text x="2.52" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-1.0×10³</text>
    <text x="8.24" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-8.0×10²</text>
    <text x="13.95" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-6.0×10²</text>
    <text x="19.67" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-4.0×10²</text>
    <text x="25.38" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">-2.0×10²</text>
    <text x="31.1" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">0</text>
    <text x="36.81" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">2.0×10²</text>
    <text x="42.53" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">4.0×10²</text>
    <text x="48.24" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">6.0×10²</text>
    <text x="53.96" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">8.0×10²</text>
    <text x="59.67" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">1.0×10³</text>
    <text x="65.39" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">1.2×10³</text>
    <text x="71.1" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">1.4×10³</text>
    <text x="76.82" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">1.6×10³</text>
    <text x="82.53" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">1.8×10³</text>
    <text x="88.25" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">2.0×10³</text>
    <text x="93.96" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">2.2×10³</text>
    <text x="99.68" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">2.4×10³</text>
    <text x="105.39" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">2.6×10³</text>
    <text x="111.11" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">2.8×10³</text>
    <text x="116.82" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">3.0×10³</text>
    <text x="122.54" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">3.2×10³</text>
    <text x="128.25" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">3.4×10³</text>
    <text x="133.97" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">3.6×10³</text>
    <text x="139.68" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">3.8×10³</text>
    <text x="145.4" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">4.0×10³</text>
    <text x="151.12" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">4.2×10³</text>
    <text x="156.83" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">4.4×10³</text>
    <text x="162.55" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">4.6×10³</text>
    <text x="168.26" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">4.8×10³</text>
    <text x="173.98" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">5.0×10³</text>
    <text x="179.69" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">5.2×10³</text>
    <text x="185.41" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">5.4×10³</text>
    <text x="191.12" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">5.6×10³</text>
    <text x="196.84" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">5.8×10³</text>
    <text x="202.55" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">6.0×10³</text>
    <text x="208.27" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">6.2×10³</text>
    <text x="213.98" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">6.4×10³</text>
    <text x="219.7" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">6.6×10³</text>
    <text x="225.41" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">6.8×10³</text>
    <text x="231.13" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">7.0×10³</text>
    <text x="236.84" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">7.2×10³</text>
    <text x="242.56" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">7.4×10³</text>
    <text x="248.27" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">7.6×10³</text>
    <text x="253.99" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">7.8×10³</text>
    <text x="259.7" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="10.0">8.0×10³</text>
    <text x="-111.78" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="0.5">-5×10³</text>
    <text x="31.1" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="0.5">0</text>
    <text x="173.98" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="0.5">5×10³</text>
    <text x="316.85" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="0.5">1×10⁴</text>
    <text x="-83.2" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-4.0×10³</text>
    <text x="-68.92" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-3.5×10³</text>
    <text x="-54.63" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-3.0×10³</text>
    <text x="-40.34" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-2.5×10³</text>
    <text x="-26.05" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-2.0×10³</text>
    <text x="-11.76" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-1.5×10³</text>
    <text x="2.52" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-1.0×10³</text>
    <text x="16.81" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">-5.0×10²</text>
    <text x="31.1" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">0</text>
    <text x="45.39" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">5.0×10²</text>
    <text x="59.67" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">1.0×10³</text>
    <text x="73.96" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">1.5×10³</text>
    <text x="88.25" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">2.0×10³</text>
    <text x="102.54" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">2.5×10³</text>
    <text x="116.82" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">3.0×10³</text>
    <text x="131.11" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">3.5×10³</text>
    <text x="145.4" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">4.0×10³</text>
    <text x="159.69" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">4.5×10³</text>
    <text x="173.98" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">5.0×10³</text>
    <text x="188.26" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">5.5×10³</text>
    <text x="202.55" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">6.0×10³</text>
    <text x="216.84" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">6.5×10³</text>
    <text x="231.13" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">7.0×10³</text>
    <text x="245.41" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">7.5×10³</text>
    <text x="259.7" y="136.79" text-anchor="middle" visibility="hidden" gadfly:scale="5.0">8.0×10³</text>
  </g>
<g clip-path="url(#img-0cadd079-4)">
  <g id="img-0cadd079-5">
    <g pointer-events="visible" opacity="1" fill="#000000" fill-opacity="0.000" stroke="#000000" stroke-opacity="0.000" class="guide background" id="img-0cadd079-6">
      <rect x="29.1" y="12.61" width="118.3" height="120.5"/>
    </g>
    <g class="guide ygridlines xfixed" stroke-dasharray="0.5,0.5" stroke-width="0.2" stroke="#D0D0E0" id="img-0cadd079-7">
      <path fill="none" d="M29.1,276.74 L 147.4 276.74" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,247.62 L 147.4 247.62" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,218.49 L 147.4 218.49" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,189.37 L 147.4 189.37" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,160.24 L 147.4 160.24" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,131.12 L 147.4 131.12" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,101.99 L 147.4 101.99" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,72.86 L 147.4 72.86" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,43.74 L 147.4 43.74" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,14.61 L 147.4 14.61" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,-14.51 L 147.4 -14.51" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,-43.64 L 147.4 -43.64" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,-72.77 L 147.4 -72.77" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,-101.89 L 147.4 -101.89" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,-131.02 L 147.4 -131.02" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M29.1,247.62 L 147.4 247.62" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,240.34 L 147.4 240.34" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,233.06 L 147.4 233.06" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,225.77 L 147.4 225.77" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,218.49 L 147.4 218.49" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,211.21 L 147.4 211.21" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,203.93 L 147.4 203.93" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,196.65 L 147.4 196.65" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,189.37 L 147.4 189.37" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,182.09 L 147.4 182.09" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,174.8 L 147.4 174.8" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,167.52 L 147.4 167.52" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,160.24 L 147.4 160.24" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,152.96 L 147.4 152.96" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,145.68 L 147.4 145.68" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,138.4 L 147.4 138.4" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,131.12 L 147.4 131.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,123.83 L 147.4 123.83" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,116.55 L 147.4 116.55" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,109.27 L 147.4 109.27" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,101.99 L 147.4 101.99" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,94.71 L 147.4 94.71" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,87.43 L 147.4 87.43" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,80.14 L 147.4 80.14" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,72.86 L 147.4 72.86" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,65.58 L 147.4 65.58" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,58.3 L 147.4 58.3" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,51.02 L 147.4 51.02" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,43.74 L 147.4 43.74" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,36.46 L 147.4 36.46" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,29.17 L 147.4 29.17" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,21.89 L 147.4 21.89" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,14.61 L 147.4 14.61" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,7.33 L 147.4 7.33" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,0.05 L 147.4 0.05" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-7.23 L 147.4 -7.23" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-14.51 L 147.4 -14.51" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-21.8 L 147.4 -21.8" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-29.08 L 147.4 -29.08" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-36.36 L 147.4 -36.36" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-43.64 L 147.4 -43.64" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-50.92 L 147.4 -50.92" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-58.2 L 147.4 -58.2" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-65.48 L 147.4 -65.48" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-72.77 L 147.4 -72.77" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-80.05 L 147.4 -80.05" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-87.33 L 147.4 -87.33" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-94.61 L 147.4 -94.61" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,-101.89 L 147.4 -101.89" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M29.1,276.74 L 147.4 276.74" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M29.1,131.12 L 147.4 131.12" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M29.1,-14.51 L 147.4 -14.51" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M29.1,-160.14 L 147.4 -160.14" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M29.1,247.62 L 147.4 247.62" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,240.34 L 147.4 240.34" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,233.06 L 147.4 233.06" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,225.77 L 147.4 225.77" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,218.49 L 147.4 218.49" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,211.21 L 147.4 211.21" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,203.93 L 147.4 203.93" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,196.65 L 147.4 196.65" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,189.37 L 147.4 189.37" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,182.09 L 147.4 182.09" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,174.8 L 147.4 174.8" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,167.52 L 147.4 167.52" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,160.24 L 147.4 160.24" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,152.96 L 147.4 152.96" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,145.68 L 147.4 145.68" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,138.4 L 147.4 138.4" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,131.12 L 147.4 131.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,123.83 L 147.4 123.83" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,116.55 L 147.4 116.55" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,109.27 L 147.4 109.27" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,101.99 L 147.4 101.99" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,94.71 L 147.4 94.71" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,87.43 L 147.4 87.43" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,80.14 L 147.4 80.14" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,72.86 L 147.4 72.86" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,65.58 L 147.4 65.58" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,58.3 L 147.4 58.3" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,51.02 L 147.4 51.02" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,43.74 L 147.4 43.74" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,36.46 L 147.4 36.46" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,29.17 L 147.4 29.17" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,21.89 L 147.4 21.89" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,14.61 L 147.4 14.61" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,7.33 L 147.4 7.33" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,0.05 L 147.4 0.05" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-7.23 L 147.4 -7.23" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-14.51 L 147.4 -14.51" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-21.8 L 147.4 -21.8" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-29.08 L 147.4 -29.08" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-36.36 L 147.4 -36.36" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-43.64 L 147.4 -43.64" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-50.92 L 147.4 -50.92" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-58.2 L 147.4 -58.2" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-65.48 L 147.4 -65.48" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-72.77 L 147.4 -72.77" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-80.05 L 147.4 -80.05" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-87.33 L 147.4 -87.33" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-94.61 L 147.4 -94.61" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M29.1,-101.89 L 147.4 -101.89" visibility="hidden" gadfly:scale="5.0"/>
    </g>
    <g class="guide xgridlines yfixed" stroke-dasharray="0.5,0.5" stroke-width="0.2" stroke="#D0D0E0" id="img-0cadd079-8">
      <path fill="none" d="M-111.78,12.61 L -111.78 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M-83.2,12.61 L -83.2 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M-54.63,12.61 L -54.63 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M-26.05,12.61 L -26.05 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M2.52,12.61 L 2.52 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M31.1,12.61 L 31.1 133.12" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M59.67,12.61 L 59.67 133.12" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M88.25,12.61 L 88.25 133.12" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M116.82,12.61 L 116.82 133.12" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M145.4,12.61 L 145.4 133.12" visibility="visible" gadfly:scale="1.0"/>
      <path fill="none" d="M173.98,12.61 L 173.98 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M202.55,12.61 L 202.55 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M231.13,12.61 L 231.13 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M259.7,12.61 L 259.7 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M288.28,12.61 L 288.28 133.12" visibility="hidden" gadfly:scale="1.0"/>
      <path fill="none" d="M-83.2,12.61 L -83.2 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-77.49,12.61 L -77.49 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-71.77,12.61 L -71.77 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-66.06,12.61 L -66.06 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-60.34,12.61 L -60.34 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-54.63,12.61 L -54.63 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-48.91,12.61 L -48.91 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-43.2,12.61 L -43.2 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-37.48,12.61 L -37.48 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-31.77,12.61 L -31.77 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-26.05,12.61 L -26.05 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-20.34,12.61 L -20.34 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-14.62,12.61 L -14.62 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-8.91,12.61 L -8.91 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-3.19,12.61 L -3.19 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M2.52,12.61 L 2.52 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M8.24,12.61 L 8.24 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M13.95,12.61 L 13.95 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M19.67,12.61 L 19.67 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M25.38,12.61 L 25.38 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M31.1,12.61 L 31.1 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M36.81,12.61 L 36.81 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M42.53,12.61 L 42.53 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M48.24,12.61 L 48.24 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M53.96,12.61 L 53.96 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M59.67,12.61 L 59.67 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M65.39,12.61 L 65.39 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M71.1,12.61 L 71.1 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M76.82,12.61 L 76.82 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M82.53,12.61 L 82.53 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M88.25,12.61 L 88.25 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M93.96,12.61 L 93.96 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M99.68,12.61 L 99.68 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M105.39,12.61 L 105.39 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M111.11,12.61 L 111.11 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M116.82,12.61 L 116.82 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M122.54,12.61 L 122.54 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M128.25,12.61 L 128.25 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M133.97,12.61 L 133.97 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M139.68,12.61 L 139.68 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M145.4,12.61 L 145.4 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M151.12,12.61 L 151.12 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M156.83,12.61 L 156.83 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M162.55,12.61 L 162.55 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M168.26,12.61 L 168.26 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M173.98,12.61 L 173.98 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M179.69,12.61 L 179.69 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M185.41,12.61 L 185.41 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M191.12,12.61 L 191.12 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M196.84,12.61 L 196.84 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M202.55,12.61 L 202.55 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M208.27,12.61 L 208.27 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M213.98,12.61 L 213.98 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M219.7,12.61 L 219.7 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M225.41,12.61 L 225.41 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M231.13,12.61 L 231.13 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M236.84,12.61 L 236.84 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M242.56,12.61 L 242.56 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M248.27,12.61 L 248.27 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M253.99,12.61 L 253.99 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M259.7,12.61 L 259.7 133.12" visibility="hidden" gadfly:scale="10.0"/>
      <path fill="none" d="M-111.78,12.61 L -111.78 133.12" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M31.1,12.61 L 31.1 133.12" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M173.98,12.61 L 173.98 133.12" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M316.85,12.61 L 316.85 133.12" visibility="hidden" gadfly:scale="0.5"/>
      <path fill="none" d="M-83.2,12.61 L -83.2 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M-68.92,12.61 L -68.92 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M-54.63,12.61 L -54.63 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M-40.34,12.61 L -40.34 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M-26.05,12.61 L -26.05 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M-11.76,12.61 L -11.76 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M2.52,12.61 L 2.52 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M16.81,12.61 L 16.81 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M31.1,12.61 L 31.1 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M45.39,12.61 L 45.39 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M59.67,12.61 L 59.67 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M73.96,12.61 L 73.96 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M88.25,12.61 L 88.25 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M102.54,12.61 L 102.54 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M116.82,12.61 L 116.82 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M131.11,12.61 L 131.11 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M145.4,12.61 L 145.4 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M159.69,12.61 L 159.69 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M173.98,12.61 L 173.98 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M188.26,12.61 L 188.26 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M202.55,12.61 L 202.55 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M216.84,12.61 L 216.84 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M231.13,12.61 L 231.13 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M245.41,12.61 L 245.41 133.12" visibility="hidden" gadfly:scale="5.0"/>
      <path fill="none" d="M259.7,12.61 L 259.7 133.12" visibility="hidden" gadfly:scale="5.0"/>
    </g>
    <g class="plotpanel" id="img-0cadd079-9">
      <g stroke-width="0.3" fill="#000000" fill-opacity="0.000" class="geometry" stroke-dasharray="none" stroke="#00BFFF" id="img-0cadd079-10">
        <path fill="none" d="M31.13,35.78 L 31.16 35.97 31.18 36.16 31.21 36.35 31.24 36.53 31.27 36.72 31.3 36.91 31.33 37.09 31.36 37.28 31.38 37.47 31.41 37.65 31.44 37.84 31.47 38.02 31.5 38.2 31.53 38.39 31.56 38.57 31.58 38.75 31.61 38.93 31.64 39.12 31.67 39.3 31.7 39.48 31.73 39.66 31.76 39.84 31.78 40.02 31.81 40.2 31.84 40.38 31.87 40.56 31.9 40.74 31.93 40.91 31.96 41.09 31.98 41.27 32.01 41.45 32.04 41.62 32.07 41.8 32.1 41.98 32.13 42.15 32.16 42.33 32.18 42.5 32.21 42.68 32.24 42.85 32.27 43.02 32.3 43.2 32.33 43.37 32.36 43.54 32.38 43.71 32.41 43.89 32.44 44.06 32.47 44.23 32.5 44.4 32.53 44.57 32.56 44.74 32.58 44.91 32.61 45.08 32.64 45.25 32.67 45.42 32.7 45.59 32.73 45.75 32.76 45.92 32.78 46.09 32.81 46.26 32.84 46.42 32.87 46.59 32.9 46.75 32.93 46.92 32.96 47.09 32.98 47.25 33.01 47.42 33.04 47.58 33.07 47.74 33.1 47.91 33.13 48.07 33.16 48.23 33.18 48.4 33.21 48.56 33.24 48.72 33.27 48.88 33.3 49.04 33.33 49.2 33.36 49.36 33.38 49.52 33.41 49.68 33.44 49.84 33.47 50 33.5 50.16 33.53 50.32 33.56 50.48 33.58 50.64 33.61 50.79 33.64 50.95 33.67 51.11 33.7 51.26 33.73 51.42 33.76 51.58 33.78 51.73 33.81 51.89 33.84 52.04 33.87 52.2 33.9 52.35 33.93 52.5 33.96 52.66 33.98 52.81 34.01 52.96 34.04 53.12 34.07 53.27 34.1 53.42 34.13 53.57 34.16 53.72 34.18 53.87 34.21 54.03 34.24 54.18 34.27 54.33 34.3 54.48 34.33 54.63 34.36 54.77 34.38 54.92 34.41 55.07 34.44 55.22 34.47 55.37 34.5 55.52 34.53 55.66 34.56 55.81 34.58 55.96 34.61 56.1 34.64 56.25 34.67 56.4 34.7 56.54 34.73 56.69 34.76 56.83 34.78 56.98 34.81 57.12 34.84 57.26 34.87 57.41 34.9 57.55 34.93 57.69 34.96 57.84 34.98 57.98 35.01 58.12 35.04 58.26 35.07 58.41 35.1 58.55 35.13 58.69 35.16 58.83 35.18 58.97 35.21 59.11 35.24 59.25 35.27 59.39 35.3 59.53 35.33 59.67 35.36 59.81 35.38 59.94 35.41 60.08 35.44 60.22 35.47 60.36 35.5 60.5 35.53 60.63 35.56 60.77 35.58 60.91 35.61 61.04 35.64 61.18 35.67 61.31 35.7 61.45 35.73 61.58 35.76 61.72 35.78 61.85 35.81 61.99 35.84 62.12 35.87 62.25 35.9 62.39 35.93 62.52 35.96 62.65 35.98 62.79 36.01 62.92 36.04 63.05 36.07 63.18 36.1 63.31 36.13 63.45 36.16 63.58 36.18 63.71 36.21 63.84 36.24 63.97 36.27 64.1 36.3 64.23 36.33 64.36 36.36 64.48 36.38 64.61 36.41 64.74 36.44 64.87 36.47 65 36.5 65.13 36.53 65.25 36.56 65.38 36.58 65.51 36.61 65.63 36.64 65.76 36.67 65.89 36.7 66.01 36.73 66.14 36.76 66.26 36.78 66.39 36.81 66.51 36.84 66.64 36.87 66.76 36.9 66.89 36.93 67.01 36.96 67.13 36.98 67.26 37.01 67.38 37.04 67.5 37.07 67.63 37.1 67.75 37.13 67.87 37.16 67.99 37.18 68.11 37.21 68.23 37.24 68.35 37.27 68.48 37.3 68.6 37.33 68.72 37.36 68.84 37.38 68.96 37.41 69.08 37.44 69.19 37.47 69.31 37.5 69.43 37.53 69.55 37.56 69.67 37.58 69.79 37.61 69.91 37.64 70.02 37.67 70.14 37.7 70.26 37.73 70.37 37.76 70.49 37.78 70.61 37.81 70.72 37.84 70.84 37.87 70.95 37.9 71.07 37.93 71.19 37.96 71.3 37.99 71.41 38.01 71.53 38.04 71.64 38.07 71.76 38.1 71.87 38.13 71.98 38.16 72.1 38.19 72.21 38.21 72.32 38.24 72.44 38.27 72.55 38.3 72.66 38.33 72.77 38.36 72.88 38.39 73 38.41 73.11 38.44 73.22 38.47 73.33 38.5 73.44 38.53 73.55 38.56 73.66 38.59 73.77 38.61 73.88 38.64 73.99 38.67 74.1 38.7 74.21 38.73 74.31 38.76 74.42 38.79 74.53 38.81 74.64 38.84 74.75 38.87 74.85 38.9 74.96 38.93 75.07 38.96 75.18 38.99 75.28 39.01 75.39 39.04 75.49 39.07 75.6 39.1 75.71 39.13 75.81 39.16 75.92 39.19 76.02 39.21 76.13 39.24 76.23 39.27 76.34 39.3 76.44 39.33 76.55 39.36 76.65 39.39 76.75 39.41 76.86 39.44 76.96 39.47 77.06 39.5 77.17 39.53 77.27 39.56 77.37 39.59 77.47 39.61 77.57 39.64 77.68 39.67 77.78 39.7 77.88 39.73 77.98 39.76 78.08 39.79 78.18 39.81 78.28 39.84 78.38 39.87 78.48 39.9 78.58 39.93 78.68 39.96 78.78 39.99 78.88 40.01 78.98 40.04 79.08 40.07 79.18 40.1 79.28 40.13 79.37 40.16 79.47 40.19 79.57 40.21 79.67 40.24 79.76 40.27 79.86 40.3 79.96 40.33 80.06 40.36 80.15 40.39 80.25 40.41 80.34 40.44 80.44 40.47 80.54 40.5 80.63 40.53 80.73 40.56 80.82 40.59 80.92 40.61 81.01 40.64 81.11 40.67 81.2 40.7 81.3 40.73 81.39 40.76 81.48 40.79 81.58 40.81 81.67 40.84 81.76 40.87 81.86 40.9 81.95 40.93 82.04 40.96 82.14 40.99 82.23 41.01 82.32 41.04 82.41 41.07 82.5 41.1 82.6 41.13 82.69 41.16 82.78 41.19 82.87 41.21 82.96 41.24 83.05 41.27 83.14 41.3 83.23 41.33 83.32 41.36 83.41 41.39 83.5 41.41 83.59 41.44 83.68 41.47 83.77 41.5 83.86 41.53 83.95 41.56 84.04 41.59 84.12 41.61 84.21 41.64 84.3 41.67 84.39 41.7 84.48 41.73 84.56 41.76 84.65 41.79 84.74 41.81 84.82 41.84 84.91 41.87 85 41.9 85.08 41.93 85.17 41.96 85.26 41.99 85.34 42.01 85.43 42.04 85.51 42.07 85.6 42.1 85.69 42.13 85.77 42.16 85.86 42.19 85.94 42.21 86.02 42.24 86.11 42.27 86.19 42.3 86.28 42.33 86.36 42.36 86.44 42.39 86.53 42.41 86.61 42.44 86.69 42.47 86.78 42.5 86.86 42.53 86.94 42.56 87.03 42.59 87.11 42.61 87.19 42.64 87.27 42.67 87.35 42.7 87.44 42.73 87.52 42.76 87.6 42.79 87.68 42.81 87.76 42.84 87.84 42.87 87.92 42.9 88 42.93 88.08 42.96 88.16 42.99 88.24 43.01 88.32 43.04 88.4 43.07 88.48 43.1 88.56 43.13 88.64 43.16 88.72 43.19 88.8 43.21 88.88 43.24 88.95 43.27 89.03 43.3 89.11 43.33 89.19 43.36 89.27 43.39 89.35 43.41 89.42 43.44 89.5 43.47 89.58 43.5 89.65 43.53 89.73 43.56 89.81 43.59 89.88 43.61 89.96 43.64 90.04 43.67 90.11 43.7 90.19 43.73 90.27 43.76 90.34 43.79 90.42 43.81 90.49 43.84 90.57 43.87 90.64 43.9 90.72 43.93 90.79 43.96 90.87 43.99 90.94 44.01 91.02 44.04 91.09 44.07 91.16 44.1 91.24 44.13 91.31 44.16 91.38 44.19 91.46 44.21 91.53 44.24 91.6 44.27 91.68 44.3 91.75 44.33 91.82 44.36 91.89 44.39 91.97 44.41 92.04 44.44 92.11 44.47 92.18 44.5 92.26 44.53 92.33 44.56 92.4 44.59 92.47 44.61 92.54 44.64 92.61 44.67 92.68 44.7 92.75 44.73 92.82 44.76 92.89 44.79 92.96 44.81 93.03 44.84 93.1 44.87 93.17 44.9 93.24 44.93 93.31 44.96 93.38 44.99 93.45 45.01 93.52 45.04 93.59 45.07 93.66 45.1 93.73 45.13 93.8 45.16 93.87 45.19 93.93 45.21 94 45.24 94.07 45.27 94.14 45.3 94.21 45.33 94.27 45.36 94.34 45.39 94.41 45.41 94.48 45.44 94.54 45.47 94.61 45.5 94.68 45.53 94.74 45.56 94.81 45.59 94.88 45.61 94.94 45.64 95.01 45.67 95.07 45.7 95.14 45.73 95.21 45.76 95.27 45.79 95.34 45.81 95.4 45.84 95.47 45.87 95.53 45.9 95.6 45.93 95.66 45.96 95.73 45.99 95.79 46.01 95.86 46.04 95.92 46.07 95.98 46.1 96.05 46.13 96.11 46.16 96.18 46.19 96.24 46.21 96.3 46.24 96.37 46.27 96.43 46.3 96.49 46.33 96.55 46.36 96.62 46.39 96.68 46.41 96.74 46.44 96.81 46.47 96.87 46.5 96.93 46.53 96.99 46.56 97.05 46.59 97.12 46.61 97.18 46.64 97.24 46.67 97.3 46.7 97.36 46.73 97.42 46.76 97.48 46.79 97.54 46.81 97.61 46.84 97.67 46.87 97.73 46.9 97.79 46.93 97.85 46.96 97.91 46.99 97.97 47.01 98.03 47.04 98.09 47.07 98.15 47.1 98.21 47.13 98.27 47.16 98.33 47.19 98.39 47.21 98.44 47.24 98.5 47.27 98.56 47.3 98.62 47.33 98.68 47.36 98.74 47.39 98.8 47.41 98.85 47.44 98.91 47.47 98.97 47.5 99.03 47.53 99.09 47.56 99.14 47.59 99.2 47.61 99.26 47.64 99.32 47.67 99.37 47.7 99.43 47.73 99.49 47.76 99.54 47.79 99.6 47.81 99.66 47.84 99.71 47.87 99.77 47.9 99.83 47.93 99.88 47.96 99.94 47.99 100 48.01 100.05 48.04 100.11 48.07 100.16 48.1 100.22 48.13 100.27 48.16 100.33 48.19 100.38 48.22 100.44 48.24 100.49 48.27 100.55 48.3 100.6 48.33 100.66 48.36 100.71 48.39 100.77 48.42 100.82 48.44 100.87 48.47 100.93 48.5 100.98 48.53 101.04 48.56 101.09 48.59 101.14 48.62 101.2 48.64 101.25 48.67 101.3 48.7 101.36 48.73 101.41 48.76 101.46 48.79 101.52 48.82 101.57 48.84 101.62 48.87 101.67 48.9 101.73 48.93 101.78 48.96 101.83 48.99 101.88 49.02 101.94 49.04 101.99 49.07 102.04 49.1 102.09 49.13 102.14 49.16 102.19 49.19 102.24 49.22 102.3 49.24 102.35 49.27 102.4 49.3 102.45 49.33 102.5 49.36 102.55 49.39 102.6 49.42 102.65 49.44 102.7 49.47 102.75 49.5 102.8 49.53 102.85 49.56 102.9 49.59 102.95 49.62 103 49.64 103.05 49.67 103.1 49.7 103.15 49.73 103.2 49.76 103.25 49.79 103.3 49.82 103.35 49.84 103.4 49.87 103.45 49.9 103.5 49.93 103.54 49.96 103.59 49.99 103.64 50.02 103.69 50.04 103.74 50.07 103.79 50.1 103.83 50.13 103.88 50.16 103.93 50.19 103.98 50.22 104.03 50.24 104.07 50.27 104.12 50.3 104.17 50.33 104.22 50.36 104.26 50.39 104.31 50.42 104.36 50.44 104.4 50.47 104.45 50.5 104.5 50.53 104.54 50.56 104.59 50.59 104.64 50.62 104.68 50.64 104.73 50.67 104.78 50.7 104.82 50.73 104.87 50.76 104.91 50.79 104.96 50.82 105.01 50.84 105.05 50.87 105.1 50.9 105.14 50.93 105.19 50.96 105.23 50.99 105.28 51.02 105.32 51.04 105.37 51.07 105.41 51.1 105.46 51.13 105.5 51.16 105.55 51.19 105.59 51.22 105.64 51.24 105.68 51.27 105.73 51.3 105.77 51.33 105.81 51.36 105.86 51.39 105.9 51.42 105.95 51.44 105.99 51.47 106.03 51.5 106.08 51.53 106.12 51.56 106.16 51.59 106.21 51.62 106.25 51.64 106.29 51.67 106.34 51.7 106.38 51.73 106.42 51.76 106.47 51.79 106.51 51.82 106.55 51.84 106.59 51.87 106.64 51.9 106.68 51.93 106.72 51.96 106.76 51.99 106.8 52.02 106.85 52.04 106.89 52.07 106.93 52.1 106.97 52.13 107.01 52.16 107.06 52.19 107.1 52.22 107.14 52.24 107.18 52.27 107.22 52.3 107.26 52.33 107.3 52.36 107.34 52.39 107.39 52.42 107.43 52.44 107.47 52.47 107.51 52.5 107.55 52.53 107.59 52.56 107.63 52.59 107.67 52.62 107.71 52.64 107.75 52.67 107.79 52.7 107.83 52.73 107.87 52.76 107.91 52.79 107.95 52.82 107.99 52.84 108.03 52.87 108.07 52.9 108.11 52.93 108.15 52.96 108.19 52.99 108.23 53.02 108.26 53.04 108.3 53.07 108.34 53.1 108.38 53.13 108.42 53.16 108.46 53.19 108.5 53.22 108.54 53.24 108.58 53.27 108.61 53.3 108.65 53.33 108.69 53.36 108.73 53.39 108.77 53.42 108.8 53.44 108.84 53.47 108.88 53.5 108.92 53.53 108.96 53.56 108.99 53.59 109.03 53.62 109.07 53.64 109.11 53.67 109.14 53.7 109.18 53.73 109.22 53.76 109.26 53.79 109.29 53.82 109.33 53.84 109.37 53.87 109.4 53.9 109.44 53.93 109.48 53.96 109.51 53.99 109.55 54.02 109.59 54.04 109.62 54.07 109.66 54.1 109.7 54.13 109.73 54.16 109.77 54.19 109.8 54.22 109.84 54.24 109.88 54.27 109.91 54.3 109.95 54.33 109.98 54.36 110.02 54.39 110.05 54.42 110.09 54.44 110.12 54.47 110.16 54.5 110.2 54.53 110.23 54.56 110.27 54.59 110.3 54.62 110.34 54.64 110.37 54.67 110.41 54.7 110.44 54.73 110.47 54.76 110.51 54.79 110.54 54.82 110.58 54.84 110.61 54.87 110.65 54.9 110.68 54.93 110.72 54.96 110.75 54.99 110.78 55.02 110.82 55.04 110.85 55.07 110.89 55.1 110.92 55.13 110.95 55.16 110.99 55.19 111.02 55.22 111.05 55.24 111.09 55.27 111.12 55.3 111.15 55.33 111.19 55.36 111.22 55.39 111.25 55.42 111.29 55.44 111.32 55.47 111.35 55.5 111.39 55.53 111.42 55.56 111.45 55.59 111.48 55.62 111.52 55.64 111.55 55.67 111.58 55.7 111.61 55.73 111.65 55.76 111.68 55.79 111.71 55.82 111.74 55.84 111.77 55.87 111.81 55.9 111.84 55.93 111.87 55.96 111.9 55.99 111.93 56.02 111.97 56.04 112 56.07 112.03 56.1 112.06 56.13 112.09 56.16 112.12 56.19 112.15 56.22 112.19 56.24 112.22 56.27 112.25 56.3 112.28 56.33 112.31 56.36 112.34 56.39 112.37 56.42 112.4 56.44 112.43 56.47 112.46 56.5 112.49 56.53 112.52 56.56 112.56 56.59 112.59 56.62 112.62 56.64 112.65 56.67 112.68 56.7 112.71 56.73 112.74 56.76 112.77 56.79 112.8 56.82 112.83 56.84 112.86 56.87 112.89 56.9 112.92 56.93 112.95 56.96 112.98 56.99 113.01 57.02 113.03 57.04 113.06 57.07 113.09 57.1 113.12 57.13 113.15 57.16 113.18 57.19 113.21 57.22 113.24 57.24 113.27 57.27 113.3 57.3 113.33 57.33 113.36 57.36 113.38 57.39 113.41 57.42 113.44 57.44 113.47 57.47 113.5 57.5 113.53 57.53 113.56 57.56 113.58 57.59 113.61 57.62 113.64 57.64 113.67 57.67 113.7 57.7 113.73 57.73 113.75 57.76 113.78 57.79 113.81 57.82 113.84 57.84 113.87 57.87 113.89 57.9 113.92 57.93 113.95 57.96 113.98 57.99 114 58.02 114.03 58.04 114.06 58.07 114.09 58.1 114.11 58.13 114.14 58.16 114.17 58.19 114.2 58.22 114.22 58.24 114.25 58.27 114.28 58.3 114.3 58.33 114.33 58.36 114.36 58.39 114.38 58.42 114.41 58.45 114.44 58.47 114.46 58.5 114.49 58.53 114.52 58.56 114.54 58.59 114.57 58.62 114.6 58.65 114.62 58.67 114.65 58.7 114.68 58.73 114.7 58.76 114.73 58.79 114.75 58.82 114.78 58.85 114.81 58.87 114.83 58.9 114.86 58.93 114.88 58.96 114.91 58.99 114.94 59.02 114.96 59.05 114.99 59.07 115.01 59.1 115.04 59.13 115.06 59.16 115.09 59.19 115.11 59.22 115.14 59.25 115.16 59.27 115.19 59.3 115.21 59.33 115.24 59.36 115.27 59.39 115.29 59.42 115.31 59.45 115.34 59.47 115.36 59.5 115.39 59.53 115.41 59.56 115.44 59.59 115.46 59.62 115.49 59.65 115.51 59.67 115.54 59.7 115.56 59.73 115.59 59.76 115.61 59.79 115.63 59.82 115.66 59.85 115.68 59.87 115.71 59.9 115.73 59.93 115.76 59.96 115.78 59.99 115.8 60.02 115.83 60.05 115.85 60.07 115.88 60.1 115.9 60.13 115.92 60.16 115.95 60.19 115.97 60.22 115.99 60.25 116.02 60.27 116.04 60.3 116.06 60.33 116.09 60.36 116.11 60.39 116.13 60.42 116.16 60.45 116.18 60.47 116.2 60.5 116.23 60.53 116.25 60.56 116.27 60.59 116.3 60.62 116.32 60.65 116.34 60.67 116.36 60.7 116.39 60.73 116.41 60.76 116.43 60.79 116.46 60.82 116.48 60.85 116.5 60.87 116.52 60.9 116.55 60.93 116.57 60.96 116.59 60.99 116.61 61.02 116.64 61.05 116.66 61.07 116.68 61.1 116.7 61.13 116.72 61.16 116.75 61.19 116.77 61.22 116.79 61.25 116.81 61.27 116.83 61.3 116.86 61.33 116.88 61.36 116.9 61.39 116.92 61.42 116.94 61.45 116.96 61.47 116.99 61.5 117.01 61.53 117.03 61.56 117.05 61.59 117.07 61.62 117.09 61.65 117.11 61.67 117.14 61.7 117.16 61.73 117.18 61.76 117.2 61.79 117.22 61.82 117.24 61.85 117.26 61.87 117.28 61.9 117.31 61.93 117.33 61.96 117.35 61.99 117.37 62.02 117.39 62.05 117.41 62.07 117.43 62.1 117.45 62.13 117.47 62.16 117.49 62.19 117.51 62.22 117.53 62.25 117.55 62.27 117.57 62.3 117.59 62.33 117.61 62.36 117.63 62.39 117.66 62.42 117.68 62.45 117.7 62.47 117.72 62.5 117.74 62.53 117.76 62.56 117.78 62.59 117.8 62.62 117.82 62.65 117.84 62.67 117.86 62.7 117.88 62.73 117.9 62.76 117.91 62.79 117.93 62.82 117.95 62.85 117.97 62.87 117.99 62.9 118.01 62.93 118.03 62.96 118.05 62.99 118.07 63.02 118.09 63.05 118.11 63.07 118.13 63.1 118.15 63.13 118.17 63.16 118.19 63.19 118.21 63.22 118.23 63.25 118.24 63.27 118.26 63.3 118.28 63.33 118.3 63.36 118.32 63.39 118.34 63.42 118.36 63.45 118.38 63.47 118.4 63.5 118.41 63.53 118.43 63.56 118.45 63.59 118.47 63.62 118.49 63.65 118.51 63.67 118.53 63.7 118.55 63.73 118.56 63.76 118.58 63.79 118.6 63.82 118.62 63.85 118.64 63.87 118.66 63.9 118.67 63.93 118.69 63.96 118.71 63.99 118.73 64.02 118.75 64.05 118.76 64.07 118.78 64.1 118.8 64.13 118.82 64.16 118.84 64.19 118.85 64.22 118.87 64.25 118.89 64.27 118.91 64.3 118.92 64.33 118.94 64.36 118.96 64.39 118.98 64.42 119 64.45 119.01 64.47 119.03 64.5 119.05 64.53 119.07 64.56 119.08 64.59 119.1 64.62 119.12 64.65 119.14 64.67 119.15 64.7 119.17 64.73 119.19 64.76 119.2 64.79 119.22 64.82 119.24 64.85 119.26 64.87 119.27 64.9 119.29 64.93 119.31 64.96 119.32 64.99 119.34 65.02 119.36 65.05 119.37 65.07 119.39 65.1 119.41 65.13 119.42 65.16 119.44 65.19 119.46 65.22 119.47 65.25 119.49 65.27 119.51 65.3 119.52 65.33 119.54 65.36 119.56 65.39 119.57 65.42 119.59 65.45 119.61 65.47 119.62 65.5 119.64 65.53 119.66 65.56 119.67 65.59 119.69 65.62 119.7 65.65 119.72 65.67 119.74 65.7 119.75 65.73 119.77 65.76 119.78 65.79 119.8 65.82 119.82 65.85 119.83 65.87 119.85 65.9 119.86 65.93 119.88 65.96 119.9 65.99 119.91 66.02 119.93 66.05 119.94 66.07 119.96 66.1 119.97 66.13 119.99 66.16 120.01 66.19 120.02 66.22 120.04 66.25 120.05 66.27 120.07 66.3 120.08 66.33 120.1 66.36 120.11 66.39 120.13 66.42 120.14 66.45 120.16 66.47 120.17 66.5 120.19 66.53 120.21 66.56 120.22 66.59 120.24 66.62 120.25 66.65 120.27 66.67 120.28 66.7 120.3 66.73 120.31 66.76 120.33 66.79 120.34 66.82 120.36 66.85 120.37 66.87 120.39 66.9 120.4 66.93 120.41 66.96 120.43 66.99 120.44 67.02 120.46 67.05 120.47 67.07 120.49 67.1 120.5 67.13 120.52 67.16 120.53 67.19 120.55 67.22 120.56 67.25 120.58 67.27 120.59 67.3 120.6 67.33 120.62 67.36 120.63 67.39 120.65 67.42 120.66 67.45 120.68 67.47 120.69 67.5 120.7 67.53 120.72 67.56 120.73 67.59 120.75 67.62 120.76 67.65 120.77 67.67 120.79 67.7 120.8 67.73 120.82 67.76 120.83 67.79 120.84 67.82 120.86 67.85 120.87 67.87 120.89 67.9 120.9 67.93 120.91 67.96 120.93 67.99 120.94 68.02 120.95 68.05 120.97 68.07 120.98 68.1 121 68.13 121.01 68.16 121.02 68.19 121.04 68.22 121.05 68.25 121.06 68.27 121.08 68.3 121.09 68.33 121.1 68.36 121.12 68.39 121.13 68.42 121.14 68.45 121.16 68.47 121.17 68.5 121.18 68.53 121.2 68.56 121.21 68.59 121.22 68.62 121.24 68.65 121.25 68.68 121.26 68.7 121.28 68.73 121.29 68.76 121.3 68.79 121.31 68.82 121.33 68.85 121.34 68.88 121.35 68.9 121.37 68.93 121.38 68.96 121.39 68.99 121.41 69.02 121.42 69.05 121.43 69.08 121.44 69.1 121.46 69.13 121.47 69.16 121.48 69.19 121.49 69.22 121.51 69.25 121.52 69.28 121.53 69.3 121.54 69.33 121.56 69.36 121.57 69.39 121.58 69.42 121.59 69.45 121.61 69.48 121.62 69.5 121.63 69.53 121.64 69.56 121.66 69.59 121.67 69.62 121.68 69.65 121.69 69.68 121.71 69.7 121.72 69.73 121.73 69.76 121.74 69.79 121.75 69.82 121.77 69.85 121.78 69.88 121.79 69.9 121.8 69.93 121.81 69.96 121.83 69.99 121.84 70.02 121.85 70.05 121.86 70.08 121.87 70.1 121.89 70.13 121.9 70.16 121.91 70.19 121.92 70.22 121.93 70.25 121.94 70.28 121.96 70.3 121.97 70.33 121.98 70.36 121.99 70.39 122 70.42 122.01 70.45 122.03 70.48 122.04 70.5 122.05 70.53 122.06 70.56 122.07 70.59 122.08 70.62 122.1 70.65 122.11 70.68 122.12 70.7 122.13 70.73 122.14 70.76 122.15 70.79 122.16 70.82 122.17 70.85 122.19 70.88 122.2 70.9 122.21 70.93 122.22 70.96 122.23 70.99 122.24 71.02 122.25 71.05 122.26 71.08 122.28 71.1 122.29 71.13 122.3 71.16 122.31 71.19 122.32 71.22 122.33 71.25 122.34 71.28 122.35 71.3 122.36 71.33 122.37 71.36 122.39 71.39 122.4 71.42 122.41 71.45 122.42 71.48 122.43 71.5 122.44 71.53 122.45 71.56 122.46 71.59 122.47 71.62 122.48 71.65 122.49 71.68 122.5 71.7 122.51 71.73 122.52 71.76 122.54 71.79 122.55 71.82 122.56 71.85 122.57 71.88 122.58 71.9 122.59 71.93 122.6 71.96 122.61 71.99 122.62 72.02 122.63 72.05 122.64 72.08 122.65 72.1 122.66 72.13 122.67 72.16 122.68 72.19 122.69 72.22 122.7 72.25 122.71 72.28 122.72 72.3 122.73 72.33 122.74 72.36 122.75 72.39 122.76 72.42 122.77 72.45 122.78 72.48 122.79 72.5 122.8 72.53 122.81 72.56 122.82 72.59 122.83 72.62 122.84 72.65 122.85 72.68 122.86 72.7 122.87 72.73 122.88 72.76 122.89 72.79 122.9 72.82 122.91 72.85 122.92 72.88 122.93 72.9 122.94 72.93 122.95 72.96 122.96 72.99 122.97 73.02 122.98 73.05 122.99 73.08 123 73.1 123.01 73.13 123.02 73.16 123.03 73.19 123.04 73.22 123.05 73.25 123.06 73.28 123.07 73.3 123.08 73.33 123.09 73.36 123.1 73.39 123.11 73.42 123.12 73.45 123.12 73.48 123.13 73.5 123.14 73.53 123.15 73.56 123.16 73.59 123.17 73.62 123.18 73.65 123.19 73.68 123.2 73.7 123.21 73.73 123.22 73.76 123.23 73.79 123.24 73.82 123.25 73.85 123.25 73.88 123.26 73.9 123.27 73.93 123.28 73.96 123.29 73.99 123.3 74.02 123.31 74.05 123.32 74.08 123.33 74.1 123.34 74.13 123.35 74.16 123.35 74.19 123.36 74.22 123.37 74.25 123.38 74.28 123.39 74.3 123.4 74.33 123.41 74.36 123.42 74.39 123.43 74.42 123.43 74.45 123.44 74.48 123.45 74.5 123.46 74.53 123.47 74.56 123.48 74.59 123.49 74.62 123.5 74.65 123.5 74.68 123.51 74.7 123.52 74.73 123.53 74.76 123.54 74.79 123.55 74.82 123.56 74.85 123.56 74.88 123.57 74.9 123.58 74.93 123.59 74.96 123.6 74.99 123.61 75.02 123.62 75.05 123.62 75.08 123.63 75.1 123.64 75.13 123.65 75.16 123.66 75.19 123.67 75.22 123.67 75.25 123.68 75.28 123.69 75.3 123.7 75.33 123.71 75.36 123.72 75.39 123.72 75.42 123.73 75.45 123.74 75.48 123.75 75.5 123.76 75.53 123.77 75.56 123.77 75.59 123.78 75.62 123.79 75.65 123.8 75.68 123.81 75.7 123.81 75.73 123.82 75.76 123.83 75.79 123.84 75.82 123.85 75.85 123.85 75.88 123.86 75.9 123.87 75.93 123.88 75.96 123.89 75.99 123.89 76.02 123.9 76.05 123.91 76.08 123.92 76.1 123.93 76.13 123.93 76.16 123.94 76.19 123.95 76.22 123.96 76.25 123.96 76.28 123.97 76.3 123.98 76.33 123.99 76.36 124 76.39 124 76.42 124.01 76.45 124.02 76.48 124.03 76.5 124.03 76.53 124.04 76.56 124.05 76.59 124.06 76.62 124.06 76.65 124.07 76.68 124.08 76.7 124.09 76.73 124.09 76.76 124.1 76.79 124.11 76.82 124.12 76.85 124.12 76.88 124.13 76.9 124.14 76.93 124.15 76.96 124.15 76.99 124.16 77.02 124.17 77.05 124.18 77.08 124.18 77.1 124.19 77.13 124.2 77.16 124.21 77.19 124.21 77.22 124.22 77.25 124.23 77.28 124.23 77.3 124.24 77.33 124.25 77.36 124.26 77.39 124.26 77.42 124.27 77.45 124.28 77.48 124.28 77.5 124.29 77.53 124.3 77.56 124.31 77.59 124.31 77.62 124.32 77.65 124.33 77.68 124.33 77.7 124.34 77.73 124.35 77.76 124.36 77.79 124.36 77.82 124.37 77.85 124.38 77.88 124.38 77.9 124.39 77.93 124.4 77.96 124.4 77.99 124.41 78.02 124.42 78.05 124.43 78.08 124.43 78.1 124.44 78.13 124.45 78.16 124.45 78.19 124.46 78.22 124.47 78.25 124.47 78.28 124.48 78.3 124.49 78.33 124.49 78.36 124.5 78.39 124.51 78.42 124.51 78.45 124.52 78.48 124.53 78.5 124.53 78.53 124.54 78.56 124.55 78.59 124.55 78.62 124.56 78.65 124.57 78.68 124.57 78.7 124.58 78.73 124.59 78.76 124.59 78.79 124.6 78.82 124.61 78.85 124.61 78.88 124.62 78.91 124.63 78.93 124.63 78.96 124.64 78.99 124.65 79.02 124.65 79.05 124.66 79.08 124.66 79.11 124.67 79.13 124.68 79.16 124.68 79.19 124.69 79.22 124.7 79.25 124.7 79.28 124.71 79.31 124.72 79.33 124.72 79.36 124.73 79.39 124.73 79.42 124.74 79.45 124.75 79.48 124.75 79.51 124.76 79.53 124.77 79.56 124.77 79.59 124.78 79.62 124.78 79.65 124.79 79.68 124.8 79.71 124.8 79.73 124.81 79.76 124.81 79.79 124.82 79.82 124.83 79.85 124.83 79.88 124.84 79.91 124.85 79.93 124.85 79.96 124.86 79.99 124.86 80.02 124.87 80.05 124.88 80.08 124.88 80.11 124.89 80.13 124.89 80.16 124.9 80.19 124.91 80.22 124.91 80.25 124.92 80.28 124.92 80.31 124.93 80.33 124.93 80.36 124.94 80.39 124.95 80.42 124.95 80.45 124.96 80.48 124.96 80.51 124.97 80.53 124.98 80.56 124.98 80.59 124.99 80.62 124.99 80.65 125 80.68 125 80.71 125.01 80.73 125.02 80.76 125.02 80.79 125.03 80.82 125.03 80.85 125.04 80.88 125.04 80.91 125.05 80.93 125.06 80.96 125.06 80.99 125.07 81.02 125.07 81.05 125.08 81.08 125.08 81.11 125.09 81.13 125.1 81.16 125.1 81.19 125.11 81.22 125.11 81.25 125.12 81.28 125.12 81.31 125.13 81.33 125.13 81.36 125.14 81.39 125.15 81.42 125.15 81.45 125.16 81.48 125.16 81.51 125.17 81.53 125.17 81.56 125.18 81.59 125.18 81.62 125.19 81.65 125.19 81.68 125.2 81.71 125.2 81.73 125.21 81.76 125.22 81.79 125.22 81.82 125.23 81.85 125.23 81.88 125.24 81.91 125.24 81.93 125.25 81.96 125.25 81.99 125.26 82.02 125.26 82.05 125.27 82.08 125.27 82.11 125.28 82.13 125.28 82.16 125.29 82.19 125.29 82.22 125.3 82.25 125.3 82.28 125.31 82.31 125.32 82.33 125.32 82.36 125.33 82.39 125.33 82.42 125.34 82.45 125.34 82.48 125.35 82.51 125.35 82.53 125.36 82.56 125.36 82.59 125.37 82.62 125.37 82.65 125.38 82.68 125.38 82.71 125.39 82.73 125.39 82.76 125.4 82.79 125.4 82.82 125.41 82.85 125.41 82.88 125.42 82.91 125.42 82.93 125.43 82.96 125.43 82.99 125.44 83.02 125.44 83.05 125.45 83.08 125.45 83.11 125.46 83.13 125.46 83.16 125.47 83.19 125.47 83.22 125.48 83.25 125.48 83.28 125.48 83.31 125.49 83.33 125.49 83.36 125.5 83.39 125.5 83.42 125.51 83.45 125.51 83.48 125.52 83.51 125.52 83.53 125.53 83.56 125.53 83.59 125.54 83.62 125.54 83.65 125.55 83.68 125.55 83.71 125.56 83.73 125.56 83.76 125.57 83.79 125.57 83.82 125.57 83.85 125.58 83.88 125.58 83.91 125.59 83.93 125.59 83.96 125.6 83.99 125.6 84.02 125.61 84.05 125.61 84.08 125.62 84.11 125.62 84.13 125.63 84.16 125.63 84.19 125.63 84.22 125.64 84.25 125.64 84.28 125.65 84.31 125.65 84.33 125.66 84.36 125.66 84.39 125.67 84.42 125.67 84.45 125.68 84.48 125.68 84.51 125.68 84.53 125.69 84.56 125.69 84.59 125.7 84.62 125.7 84.65 125.71 84.68 125.71 84.71 125.71 84.73 125.72 84.76 125.72 84.79 125.73 84.82 125.73 84.85 125.74 84.88 125.74 84.91 125.75 84.93 125.75 84.96 125.75 84.99 125.76 85.02 125.76 85.05 125.77 85.08 125.77 85.11 125.78 85.13 125.78 85.16 125.78 85.19 125.79 85.22 125.79 85.25 125.8 85.28 125.8 85.31 125.81 85.33 125.81 85.36 125.81 85.39 125.82 85.42 125.82 85.45 125.83 85.48 125.83 85.51 125.83 85.53 125.84 85.56 125.84 85.59 125.85 85.62 125.85 85.65 125.85 85.68 125.86 85.71 125.86 85.73 125.87 85.76 125.87 85.79 125.88 85.82 125.88 85.85 125.88 85.88 125.89 85.91 125.89 85.93 125.9 85.96 125.9 85.99 125.9 86.02 125.91 86.05 125.91 86.08 125.92 86.11 125.92 86.13 125.92 86.16 125.93 86.19 125.93 86.22 125.94 86.25 125.94 86.28 125.94 86.31 125.95 86.33 125.95 86.36 125.96 86.39 125.96 86.42 125.96 86.45 125.97 86.48 125.97 86.51 125.97 86.53 125.98 86.56 125.98 86.59 125.99 86.62 125.99 86.65 125.99 86.68 126 86.71 126 86.73 126.01 86.76 126.01 86.79 126.01 86.82 126.02 86.85 126.02 86.88 126.02 86.91 126.03 86.93 126.03 86.96 126.04 86.99 126.04 87.02 126.04 87.05 126.05 87.08 126.05 87.11 126.05 87.13 126.06 87.16 126.06 87.19 126.07 87.22 126.07 87.25 126.07 87.28 126.08 87.31 126.08 87.33 126.08 87.36 126.09 87.39 126.09 87.42 126.1 87.45 126.1 87.48 126.1 87.51 126.11 87.53 126.11 87.56 126.11 87.59 126.12 87.62 126.12 87.65 126.12 87.68 126.13 87.71 126.13 87.73 126.14 87.76 126.14 87.79 126.14 87.82 126.15 87.85 126.15 87.88 126.15 87.91 126.16 87.93 126.16 87.96 126.16 87.99 126.17 88.02 126.17 88.05 126.17 88.08 126.18 88.11 126.18 88.13 126.18 88.16 126.19 88.19 126.19 88.22 126.2 88.25 126.2 88.28 126.2 88.31 126.21 88.33 126.21 88.36 126.21 88.39 126.22 88.42 126.22 88.45 126.22 88.48 126.23 88.51 126.23 88.53 126.23 88.56 126.24 88.59 126.24 88.62 126.24 88.65 126.25 88.68 126.25 88.71 126.25 88.73 126.26 88.76 126.26 88.79 126.26 88.82 126.27 88.85 126.27 88.88 126.27 88.91 126.28 88.93 126.28 88.96 126.28 88.99 126.29 89.02 126.29 89.05 126.29 89.08 126.3 89.11 126.3 89.14 126.3 89.16 126.31 89.19 126.31 89.22 126.31 89.25 126.32 89.28 126.32 89.31 126.32 89.34 126.33 89.36 126.33 89.39 126.33 89.42 126.34 89.45 126.34 89.48 126.34 89.51 126.34 89.54 126.35 89.56 126.35 89.59 126.35 89.62 126.36 89.65 126.36 89.68 126.36 89.71 126.37 89.74 126.37 89.76 126.37 89.79 126.38 89.82 126.38 89.85 126.38 89.88 126.39 89.91 126.39 89.94 126.39 89.96 126.39 89.99 126.4 90.02 126.4 90.05 126.4 90.08 126.41 90.11 126.41 90.14 126.41 90.16 126.42 90.19 126.42 90.22 126.42 90.25 126.43 90.28 126.43 90.31 126.43 90.34 126.43 90.36 126.44 90.39 126.44 90.42 126.44 90.45 126.45 90.48 126.45 90.51 126.45 90.54 126.46 90.56 126.46 90.59 126.46 90.62 126.46 90.65 126.47 90.68 126.47 90.71 126.47 90.74 126.48 90.76 126.48 90.79 126.48 90.82 126.48 90.85 126.49 90.88 126.49 90.91 126.49 90.94 126.5 90.96 126.5 90.99 126.5 91.02 126.51 91.05 126.51 91.08 126.51 91.11 126.51 91.14 126.52 91.16 126.52 91.19 126.52 91.22 126.53 91.25 126.53 91.28 126.53 91.31 126.53 91.34 126.54 91.36 126.54 91.39 126.54 91.42 126.54 91.45 126.55 91.48 126.55 91.51 126.55 91.54 126.56 91.56 126.56 91.59 126.56 91.62 126.56 91.65 126.57 91.68 126.57 91.71 126.57 91.74 126.58 91.76 126.58 91.79 126.58 91.82 126.58 91.85 126.59 91.88 126.59 91.91 126.59 91.94 126.59 91.96 126.6 91.99 126.6 92.02 126.6 92.05 126.61 92.08 126.61 92.11 126.61 92.14 126.61 92.16 126.62 92.19 126.62 92.22 126.62 92.25 126.62 92.28 126.63 92.31 126.63 92.34 126.63 92.36 126.63 92.39 126.64 92.42 126.64 92.45 126.64 92.48 126.64 92.51 126.65 92.54 126.65 92.56 126.65 92.59 126.66 92.62 126.66 92.65 126.66 92.68 126.66 92.71 126.67 92.74 126.67 92.76 126.67 92.79 126.67 92.82 126.68 92.85 126.68 92.88 126.68 92.91 126.68 92.94 126.69 92.96 126.69 92.99 126.69 93.02 126.69 93.05 126.7 93.08 126.7 93.11 126.7 93.14 126.7 93.16 126.71 93.19 126.71 93.22 126.71 93.25 126.71 93.28 126.72 93.31 126.72 93.34 126.72 93.36 126.72 93.39 126.73 93.42 126.73 93.45 126.73 93.48 126.73 93.51 126.74 93.54 126.74 93.56 126.74 93.59 126.74 93.62 126.75 93.65 126.75 93.68 126.75 93.71 126.75 93.74 126.76 93.76 126.76 93.79 126.76 93.82 126.76 93.85 126.76 93.88 126.77 93.91 126.77 93.94 126.77 93.96 126.77 93.99 126.78 94.02 126.78 94.05 126.78 94.08 126.78 94.11 126.79 94.14 126.79 94.16 126.79 94.19 126.79 94.22 126.8 94.25 126.8 94.28 126.8 94.31 126.8 94.34 126.8 94.36 126.81 94.39 126.81 94.42 126.81 94.45 126.81 94.48 126.82 94.51 126.82 94.54 126.82 94.56 126.82 94.59 126.83 94.62 126.83 94.65 126.83 94.68 126.83 94.71 126.83 94.74 126.84 94.76 126.84 94.79 126.84 94.82 126.84 94.85 126.85 94.88 126.85 94.91 126.85 94.94 126.85 94.96 126.85 94.99 126.86 95.02 126.86 95.05 126.86 95.08 126.86 95.11 126.87 95.14 126.87 95.16 126.87 95.19 126.87 95.22 126.87 95.25 126.88 95.28 126.88 95.31 126.88 95.34 126.88 95.36 126.89 95.39 126.89 95.42 126.89 95.45 126.89 95.48 126.89 95.51 126.9 95.54 126.9 95.56 126.9 95.59 126.9 95.62 126.9 95.65 126.91 95.68 126.91 95.71 126.91 95.74 126.91 95.76 126.92 95.79 126.92 95.82 126.92 95.85 126.92 95.88 126.92 95.91 126.93 95.94 126.93 95.96 126.93 95.99 126.93 96.02 126.93 96.05 126.94 96.08 126.94 96.11 126.94 96.14 126.94 96.16 126.94 96.19 126.95 96.22 126.95 96.25 126.95 96.28 126.95 96.31 126.95 96.34 126.96 96.36 126.96 96.39 126.96 96.42 126.96 96.45 126.96 96.48 126.97 96.51 126.97 96.54 126.97 96.56 126.97 96.59 126.97 96.62 126.98 96.65 126.98 96.68 126.98 96.71 126.98 96.74 126.98 96.76 126.99 96.79 126.99 96.82 126.99 96.85 126.99 96.88 126.99 96.91 127 96.94 127 96.96 127 96.99 127 97.02 127 97.05 127.01 97.08 127.01 97.11 127.01 97.14 127.01 97.16 127.01 97.19 127.02 97.22 127.02 97.25 127.02 97.28 127.02 97.31 127.02 97.34 127.03 97.36 127.03 97.39 127.03 97.42 127.03 97.45 127.03 97.48 127.03 97.51 127.04 97.54 127.04 97.56 127.04 97.59 127.04 97.62 127.04 97.65 127.05 97.68 127.05 97.71 127.05 97.74 127.05 97.76 127.05 97.79 127.06 97.82 127.06 97.85 127.06 97.88 127.06 97.91 127.06 97.94 127.06 97.96 127.07 97.99 127.07 98.02 127.07 98.05 127.07 98.08 127.07 98.11 127.08 98.14 127.08 98.16 127.08 98.19 127.08 98.22 127.08 98.25 127.08 98.28 127.09 98.31 127.09 98.34 127.09 98.36 127.09 98.39 127.09 98.42 127.1 98.45 127.1 98.48 127.1 98.51 127.1 98.54 127.1 98.56 127.1 98.59 127.11 98.62 127.11 98.65 127.11 98.68 127.11 98.71 127.11 98.74 127.11 98.76 127.12 98.79 127.12 98.82 127.12 98.85 127.12 98.88 127.12 98.91 127.12 98.94 127.13 98.96 127.13 98.99 127.13 99.02 127.13 99.05 127.13 99.08 127.13 99.11 127.14 99.14 127.14 99.16 127.14 99.19 127.14 99.22 127.14 99.25 127.15 99.28 127.15 99.31 127.15 99.34 127.15 99.37 127.15 99.39 127.15 99.42 127.16 99.45 127.16 99.48 127.16 99.51 127.16 99.54 127.16 99.57 127.16 99.59 127.17 99.62 127.17 99.65 127.17 99.68 127.17 99.71 127.17 99.74 127.17 99.77 127.17 99.79 127.18 99.82 127.18 99.85 127.18 99.88 127.18 99.91 127.18 99.94 127.18 99.97 127.19 99.99 127.19 100.02 127.19 100.05 127.19 100.08 127.19 100.11 127.19 100.14 127.2 100.17 127.2 100.19 127.2 100.22 127.2 100.25 127.2 100.28 127.2 100.31 127.21 100.34 127.21 100.37 127.21 100.39 127.21 100.42 127.21 100.45 127.21 100.48 127.21 100.51 127.22 100.54 127.22 100.57 127.22 100.59 127.22 100.62 127.22 100.65 127.22 100.68 127.23 100.71 127.23 100.74 127.23 100.77 127.23 100.79 127.23 100.82 127.23 100.85 127.23 100.88 127.24 100.91 127.24 100.94 127.24 100.97 127.24 100.99 127.24 101.02 127.24 101.05 127.24 101.08 127.25 101.11 127.25 101.14 127.25 101.17 127.25 101.19 127.25 101.22 127.25 101.25 127.26 101.28 127.26 101.31 127.26 101.34 127.26 101.37 127.26 101.39 127.26 101.42 127.26 101.45 127.27 101.48 127.27 101.51 127.27 101.54 127.27 101.57 127.27 101.59 127.27 101.62 127.27 101.65 127.28 101.68 127.28 101.71 127.28 101.74 127.28 101.77 127.28 101.79 127.28 101.82 127.28 101.85 127.29 101.88 127.29 101.91 127.29 101.94 127.29 101.97 127.29 101.99 127.29 102.02 127.29 102.05 127.3 102.08 127.3 102.11 127.3 102.14 127.3 102.17 127.3 102.19 127.3 102.22 127.3 102.25 127.31 102.28 127.31 102.31 127.31 102.34 127.31 102.37 127.31 102.39 127.31 102.42 127.31 102.45 127.32 102.48 127.32 102.51 127.32 102.54 127.32 102.57 127.32 102.59 127.32 102.62 127.32 102.65 127.32 102.68 127.33 102.71 127.33 102.74 127.33 102.77 127.33 102.79 127.33 102.82 127.33 102.85 127.33 102.88 127.34 102.91 127.34 102.94 127.34 102.97 127.34 102.99 127.34 103.02 127.34 103.05 127.34 103.08 127.34 103.11 127.35 103.14 127.35 103.17 127.35 103.19 127.35 103.22 127.35 103.25 127.35 103.28 127.35 103.31 127.35 103.34 127.36 103.37 127.36 103.39 127.36 103.42 127.36 103.45 127.36 103.48 127.36 103.51 127.36 103.54 127.37 103.57 127.37 103.59 127.37 103.62 127.37 103.65 127.37 103.68 127.37 103.71 127.37 103.74 127.37 103.77 127.38 103.79 127.38 103.82 127.38 103.85 127.38 103.88 127.38 103.91 127.38 103.94 127.38 103.97 127.38 103.99 127.39 104.02 127.39 104.05 127.39 104.08 127.39 104.11 127.39 104.14 127.39 104.17 127.39 104.19 127.39 104.22 127.4 104.25 127.4 104.28 127.4 104.31 127.4 104.34 127.4 104.37 127.4 104.39 127.4 104.42 127.4 104.45 127.4 104.48 127.41 104.51 127.41 104.54 127.41 104.57 127.41 104.59 127.41 104.62 127.41 104.65 127.41 104.68 127.41 104.71 127.42 104.74 127.42 104.77 127.42 104.79 127.42 104.82 127.42 104.85 127.42 104.88 127.42 104.91 127.42 104.94 127.42 104.97 127.43 104.99 127.43 105.02 127.43 105.05 127.43 105.08 127.43 105.11 127.43 105.14 127.43 105.17 127.43 105.19 127.44 105.22 127.44 105.25 127.44 105.28 127.44 105.31 127.44 105.34 127.44 105.37 127.44 105.39 127.44 105.42 127.44 105.45 127.45 105.48 127.45 105.51 127.45 105.54 127.45 105.57 127.45 105.59 127.45 105.62 127.45 105.65 127.45 105.68 127.45 105.71 127.46 105.74 127.46 105.77 127.46 105.79 127.46 105.82 127.46 105.85 127.46 105.88 127.46 105.91 127.46 105.94 127.46 105.97 127.47 105.99 127.47 106.02 127.47 106.05 127.47 106.08 127.47 106.11 127.47 106.14 127.47 106.17 127.47 106.19 127.47 106.22 127.48 106.25 127.48 106.28 127.48 106.31 127.48 106.34 127.48 106.37 127.48 106.39 127.48 106.42 127.48 106.45 127.48 106.48 127.49 106.51 127.49 106.54 127.49 106.57 127.49 106.59 127.49 106.62 127.49 106.65 127.49 106.68 127.49 106.71 127.49 106.74 127.49 106.77 127.5 106.79 127.5 106.82 127.5 106.85 127.5 106.88 127.5 106.91 127.5 106.94 127.5 106.97 127.5 106.99 127.5 107.02 127.5 107.05 127.51 107.08 127.51 107.11 127.51 107.14 127.51 107.17 127.51 107.19 127.51 107.22 127.51 107.25 127.51 107.28 127.51 107.31 127.51 107.34 127.52 107.37 127.52 107.39 127.52 107.42 127.52 107.45 127.52 107.48 127.52 107.51 127.52 107.54 127.52 107.57 127.52 107.59 127.52 107.62 127.53 107.65 127.53 107.68 127.53 107.71 127.53 107.74 127.53 107.77 127.53 107.79 127.53 107.82 127.53 107.85 127.53 107.88 127.53 107.91 127.54 107.94 127.54 107.97 127.54 107.99 127.54 108.02 127.54 108.05 127.54 108.08 127.54 108.11 127.54 108.14 127.54 108.17 127.54 108.19 127.55 108.22 127.55 108.25 127.55 108.28 127.55 108.31 127.55 108.34 127.55 108.37 127.55 108.39 127.55 108.42 127.55 108.45 127.55 108.48 127.55 108.51 127.56 108.54 127.56 108.57 127.56 108.59 127.56 108.62 127.56 108.65 127.56 108.68 127.56 108.71 127.56 108.74 127.56 108.77 127.56 108.79 127.56 108.82 127.57 108.85 127.57 108.88 127.57 108.91 127.57 108.94 127.57 108.97 127.57 108.99 127.57 109.02 127.57 109.05 127.57 109.08 127.57 109.11 127.57 109.14 127.58 109.17 127.58 109.19 127.58 109.22 127.58 109.25 127.58 109.28 127.58 109.31 127.58 109.34 127.58 109.37 127.58 109.39 127.58 109.42 127.58 109.45 127.59 109.48 127.59 109.51 127.59 109.54 127.59 109.57 127.59 109.6 127.59 109.62 127.59 109.65 127.59 109.68 127.59 109.71 127.59 109.74 127.59 109.77 127.59 109.8 127.6 109.82 127.6 109.85 127.6 109.88 127.6 109.91 127.6 109.94 127.6 109.97 127.6 110 127.6 110.02 127.6 110.05 127.6 110.08 127.6 110.11 127.61 110.14 127.61 110.17 127.61 110.2 127.61 110.22 127.61 110.25 127.61 110.28 127.61 110.31 127.61 110.34 127.61 110.37 127.61 110.4 127.61 110.42 127.61 110.45 127.62 110.48 127.62 110.51 127.62 110.54 127.62 110.57 127.62 110.6 127.62 110.62 127.62 110.65 127.62 110.68 127.62 110.71 127.62 110.74 127.62 110.77 127.62 110.8 127.63 110.82 127.63 110.85 127.63 110.88 127.63 110.91 127.63 110.94 127.63 110.97 127.63 111 127.63 111.02 127.63 111.05 127.63 111.08 127.63 111.11 127.63 111.14 127.63 111.17 127.64 111.2 127.64 111.22 127.64 111.25 127.64 111.28 127.64 111.31 127.64 111.34 127.64 111.37 127.64 111.4 127.64 111.42 127.64 111.45 127.64 111.48 127.64 111.51 127.64 111.54 127.65 111.57 127.65 111.6 127.65 111.62 127.65 111.65 127.65 111.68 127.65 111.71 127.65 111.74 127.65 111.77 127.65 111.8 127.65 111.82 127.65 111.85 127.65 111.88 127.65 111.91 127.66 111.94 127.66 111.97 127.66 112 127.66 112.02 127.66 112.05 127.66 112.08 127.66 112.11 127.66 112.14 127.66 112.17 127.66 112.2 127.66 112.22 127.66 112.25 127.66 112.28 127.67 112.31 127.67 112.34 127.67 112.37 127.67 112.4 127.67 112.42 127.67 112.45 127.67 112.48 127.67 112.51 127.67 112.54 127.67 112.57 127.67 112.6 127.67 112.62 127.67 112.65 127.67 112.68 127.68 112.71 127.68 112.74 127.68 112.77 127.68 112.8 127.68 112.82 127.68 112.85 127.68 112.88 127.68 112.91 127.68 112.94 127.68 112.97 127.68 113 127.68 113.02 127.68 113.05 127.68 113.08 127.69 113.11 127.69 113.14 127.69 113.17 127.69 113.2 127.69 113.22 127.69 113.25 127.69 113.28 127.69 113.31 127.69 113.34 127.69 113.37 127.69 113.4 127.69 113.42 127.69 113.45 127.69 113.48 127.7 113.51 127.7 113.54 127.7 113.57 127.7 113.6 127.7 113.62 127.7 113.65 127.7 113.68 127.7 113.71 127.7 113.74 127.7 113.77 127.7 113.8 127.7 113.82 127.7 113.85 127.7 113.88 127.7 113.91 127.71 113.94 127.71 113.97 127.71 114 127.71 114.02 127.71 114.05 127.71 114.08 127.71 114.11 127.71 114.14 127.71 114.17 127.71 114.2 127.71 114.22 127.71 114.25 127.71 114.28 127.71 114.31 127.71 114.34 127.72 114.37 127.72 114.4 127.72 114.42 127.72 114.45 127.72 114.48 127.72 114.51 127.72 114.54 127.72 114.57 127.72 114.6 127.72 114.62 127.72 114.65 127.72 114.68 127.72 114.71 127.72 114.74 127.72 114.77 127.72 114.8 127.73 114.82 127.73 114.85 127.73 114.88 127.73 114.91 127.73 114.94 127.73 114.97 127.73 115 127.73 115.02 127.73 115.05 127.73 115.08 127.73 115.11 127.73 115.14 127.73 115.17 127.73 115.2 127.73 115.22 127.73 115.25 127.74 115.28 127.74 115.31 127.74 115.34 127.74 115.37 127.74 115.4 127.74 115.42 127.74 115.45 127.74 115.48 127.74 115.51 127.74 115.54 127.74 115.57 127.74 115.6 127.74 115.62 127.74 115.65 127.74 115.68 127.74 115.71 127.74 115.74 127.75 115.77 127.75 115.8 127.75 115.82 127.75 115.85 127.75 115.88 127.75 115.91 127.75 115.94 127.75 115.97 127.75 116 127.75 116.02 127.75 116.05 127.75 116.08 127.75 116.11 127.75 116.14 127.75 116.17 127.75 116.2 127.76 116.22 127.76 116.25 127.76 116.28 127.76 116.31 127.76 116.34 127.76 116.37 127.76 116.4 127.76 116.42 127.76 116.45 127.76 116.48 127.76 116.51 127.76 116.54 127.76 116.57 127.76 116.6 127.76 116.62 127.76 116.65 127.76 116.68 127.76 116.71 127.77 116.74 127.77 116.77 127.77 116.8 127.77 116.82 127.77 116.85 127.77 116.88 127.77 116.91 127.77 116.94 127.77 116.97 127.77 117 127.77 117.02 127.77 117.05 127.77 117.08 127.77 117.11 127.77 117.14 127.77 117.17 127.77 117.2 127.77 117.22 127.78 117.25 127.78 117.28 127.78 117.31 127.78 117.34 127.78 117.37 127.78 117.4 127.78 117.42 127.78 117.45 127.78 117.48 127.78 117.51 127.78 117.54 127.78 117.57 127.78 117.6 127.78 117.62 127.78 117.65 127.78 117.68 127.78 117.71 127.78 117.74 127.78 117.77 127.79 117.8 127.79 117.82 127.79 117.85 127.79 117.88 127.79 117.91 127.79 117.94 127.79 117.97 127.79 118 127.79 118.02 127.79 118.05 127.79 118.08 127.79 118.11 127.79 118.14 127.79 118.17 127.79 118.2 127.79 118.22 127.79 118.25 127.79 118.28 127.79 118.31 127.8 118.34 127.8 118.37 127.8 118.4 127.8 118.42 127.8 118.45 127.8 118.48 127.8 118.51 127.8 118.54 127.8 118.57 127.8 118.6 127.8 118.62 127.8 118.65 127.8 118.68 127.8 118.71 127.8 118.74 127.8 118.77 127.8 118.8 127.8 118.82 127.8 118.85 127.8 118.88 127.81 118.91 127.81 118.94 127.81 118.97 127.81 119 127.81 119.02 127.81 119.05 127.81 119.08 127.81 119.11 127.81 119.14 127.81 119.17 127.81 119.2 127.81 119.22 127.81 119.25 127.81 119.28 127.81 119.31 127.81 119.34 127.81 119.37 127.81 119.4 127.81 119.42 127.81 119.45 127.82 119.48 127.82 119.51 127.82 119.54 127.82 119.57 127.82 119.6 127.82 119.62 127.82 119.65 127.82 119.68 127.82 119.71 127.82 119.74 127.82 119.77 127.82 119.8 127.82 119.83 127.82 119.85 127.82 119.88 127.82 119.91 127.82 119.94 127.82 119.97 127.82 120 127.82 120.03 127.82 120.05 127.83 120.08 127.83 120.11 127.83 120.14 127.83 120.17 127.83 120.2 127.83 120.23 127.83 120.25 127.83 120.28 127.83 120.31 127.83 120.34 127.83 120.37 127.83 120.4 127.83 120.43 127.83 120.45 127.83 120.48 127.83 120.51 127.83 120.54 127.83 120.57 127.83 120.6 127.83 120.63 127.83 120.65 127.83 120.68 127.83 120.71 127.84 120.74 127.84 120.77 127.84 120.8 127.84 120.83 127.84 120.85 127.84 120.88 127.84 120.91 127.84 120.94 127.84 120.97 127.84 121 127.84 121.03 127.84 121.05 127.84 121.08 127.84 121.11 127.84 121.14 127.84 121.17 127.84 121.2 127.84 121.23 127.84 121.25 127.84 121.28 127.84 121.31 127.84 121.34 127.85 121.37 127.85 121.4 127.85 121.43 127.85 121.45 127.85 121.48 127.85 121.51 127.85 121.54 127.85 121.57 127.85 121.6 127.85 121.63 127.85 121.65 127.85 121.68 127.85 121.71 127.85 121.74 127.85 121.77 127.85 121.8 127.85 121.83 127.85 121.85 127.85 121.88 127.85 121.91 127.85 121.94 127.85 121.97 127.85 122 127.85 122.03 127.86 122.05 127.86 122.08 127.86 122.11 127.86 122.14 127.86 122.17 127.86 122.2 127.86 122.23 127.86 122.25 127.86 122.28 127.86 122.31 127.86 122.34 127.86 122.37 127.86 122.4 127.86 122.43 127.86 122.45 127.86 122.48 127.86 122.51 127.86 122.54 127.86 122.57 127.86 122.6 127.86 122.63 127.86 122.65 127.86 122.68 127.86 122.71 127.86 122.74 127.87 122.77 127.87 122.8 127.87 122.83 127.87 122.85 127.87 122.88 127.87 122.91 127.87 122.94 127.87 122.97 127.87 123 127.87 123.03 127.87 123.05 127.87 123.08 127.87 123.11 127.87 123.14 127.87 123.17 127.87 123.2 127.87 123.23 127.87 123.25 127.87 123.28 127.87 123.31 127.87 123.34 127.87 123.37 127.87 123.4 127.87 123.43 127.87 123.45 127.87 123.48 127.88 123.51 127.88 123.54 127.88 123.57 127.88 123.6 127.88 123.63 127.88 123.65 127.88 123.68 127.88 123.71 127.88 123.74 127.88 123.77 127.88 123.8 127.88 123.83 127.88 123.85 127.88 123.88 127.88 123.91 127.88 123.94 127.88 123.97 127.88 124 127.88 124.03 127.88 124.05 127.88 124.08 127.88 124.11 127.88 124.14 127.88 124.17 127.88 124.2 127.88 124.23 127.88 124.25 127.89 124.28 127.89 124.31 127.89 124.34 127.89 124.37 127.89 124.4 127.89 124.43 127.89 124.45 127.89 124.48 127.89 124.51 127.89 124.54 127.89 124.57 127.89 124.6 127.89 124.63 127.89 124.65 127.89 124.68 127.89 124.71 127.89 124.74 127.89 124.77 127.89 124.8 127.89 124.83 127.89 124.85 127.89 124.88 127.89 124.91 127.89 124.94 127.89 124.97 127.89 125 127.89 125.03 127.89 125.05 127.9 125.08 127.9 125.11 127.9 125.14 127.9 125.17 127.9 125.2 127.9 125.23 127.9 125.25 127.9 125.28 127.9 125.31 127.9 125.34 127.9 125.37 127.9 125.4 127.9 125.43 127.9 125.45 127.9 125.48 127.9 125.51 127.9 125.54 127.9 125.57 127.9 125.6 127.9 125.63 127.9 125.65 127.9 125.68 127.9 125.71 127.9 125.74 127.9 125.77 127.9 125.8 127.9 125.83 127.9 125.85 127.9 125.88 127.9 125.91 127.91 125.94 127.91 125.97 127.91 126 127.91 126.03 127.91 126.05 127.91 126.08 127.91 126.11 127.91 126.14 127.91 126.17 127.91 126.2 127.91 126.23 127.91 126.25 127.91 126.28 127.91 126.31 127.91 126.34 127.91 126.37 127.91 126.4 127.91 126.43 127.91 126.45 127.91 126.48 127.91 126.51 127.91 126.54 127.91 126.57 127.91 126.6 127.91 126.63 127.91 126.65 127.91 126.68 127.91 126.71 127.91 126.74 127.91 126.77 127.91 126.8 127.92 126.83 127.92 126.85 127.92 126.88 127.92 126.91 127.92 126.94 127.92 126.97 127.92 127 127.92 127.03 127.92 127.05 127.92 127.08 127.92 127.11 127.92 127.14 127.92 127.17 127.92 127.2 127.92 127.23 127.92 127.25 127.92 127.28 127.92 127.31 127.92 127.34 127.92 127.37 127.92 127.4 127.92 127.43 127.92 127.45 127.92 127.48 127.92 127.51 127.92 127.54 127.92 127.57 127.92 127.6 127.92 127.63 127.92 127.65 127.92 127.68 127.92 127.71 127.92 127.74 127.93 127.77 127.93 127.8 127.93 127.83 127.93 127.85 127.93 127.88 127.93 127.91 127.93 127.94 127.93 127.97 127.93 128 127.93 128.03 127.93 128.05 127.93 128.08 127.93 128.11 127.93 128.14 127.93 128.17 127.93 128.2 127.93 128.23 127.93 128.25 127.93 128.28 127.93 128.31 127.93 128.34 127.93 128.37 127.93 128.4 127.93 128.43 127.93 128.45 127.93 128.48 127.93 128.51 127.93 128.54 127.93 128.57 127.93 128.6 127.93 128.63 127.93 128.65 127.93 128.68 127.93 128.71 127.93 128.74 127.94 128.77 127.94 128.8 127.94 128.83 127.94 128.85 127.94 128.88 127.94 128.91 127.94 128.94 127.94 128.97 127.94 129 127.94 129.03 127.94 129.05 127.94 129.08 127.94 129.11 127.94 129.14 127.94 129.17 127.94 129.2 127.94 129.23 127.94 129.25 127.94 129.28 127.94 129.31 127.94 129.34 127.94 129.37 127.94 129.4 127.94 129.43 127.94 129.45 127.94 129.48 127.94 129.51 127.94 129.54 127.94 129.57 127.94 129.6 127.94 129.63 127.94 129.65 127.94 129.68 127.94 129.71 127.94 129.74 127.94 129.77 127.94 129.8 127.95 129.83 127.95 129.85 127.95 129.88 127.95 129.91 127.95 129.94 127.95 129.97 127.95 130 127.95 130.03 127.95 130.06 127.95 130.08 127.95 130.11 127.95 130.14 127.95 130.17 127.95 130.2 127.95 130.23 127.95 130.26 127.95 130.28 127.95 130.31 127.95 130.34 127.95 130.37 127.95 130.4 127.95 130.43 127.95 130.46 127.95 130.48 127.95 130.51 127.95 130.54 127.95 130.57 127.95 130.6 127.95 130.63 127.95 130.66 127.95 130.68 127.95 130.71 127.95 130.74 127.95 130.77 127.95 130.8 127.95 130.83 127.95 130.86 127.95 130.88 127.95 130.91 127.96 130.94 127.96 130.97 127.96 131 127.96 131.03 127.96 131.06 127.96 131.08 127.96 131.11 127.96 131.14 127.96 131.17 127.96 131.2 127.96 131.23 127.96 131.26 127.96 131.28 127.96 131.31 127.96 131.34 127.96 131.37 127.96 131.4 127.96 131.43 127.96 131.46 127.96 131.48 127.96 131.51 127.96 131.54 127.96 131.57 127.96 131.6 127.96 131.63 127.96 131.66 127.96 131.68 127.96 131.71 127.96 131.74 127.96 131.77 127.96 131.8 127.96 131.83 127.96 131.86 127.96 131.88 127.96 131.91 127.96 131.94 127.96 131.97 127.96 132 127.96 132.03 127.96 132.06 127.96 132.08 127.96 132.11 127.97 132.14 127.97 132.17 127.97 132.2 127.97 132.23 127.97 132.26 127.97 132.28 127.97 132.31 127.97 132.34 127.97 132.37 127.97 132.4 127.97 132.43 127.97 132.46 127.97 132.48 127.97 132.51 127.97 132.54 127.97 132.57 127.97 132.6 127.97 132.63 127.97 132.66 127.97 132.68 127.97 132.71 127.97 132.74 127.97 132.77 127.97 132.8 127.97 132.83 127.97 132.86 127.97 132.88 127.97 132.91 127.97 132.94 127.97 132.97 127.97 133 127.97 133.03 127.97 133.06 127.97 133.08 127.97 133.11 127.97 133.14 127.97 133.17 127.97 133.2 127.97 133.23 127.97 133.26 127.97 133.28 127.97 133.31 127.97 133.34 127.97 133.37 127.98 133.4 127.98 133.43 127.98 133.46 127.98 133.48 127.98 133.51 127.98 133.54 127.98 133.57 127.98 133.6 127.98 133.63 127.98 133.66 127.98 133.68 127.98 133.71 127.98 133.74 127.98 133.77 127.98 133.8 127.98 133.83 127.98 133.86 127.98 133.88 127.98 133.91 127.98 133.94 127.98 133.97 127.98 134 127.98 134.03 127.98 134.06 127.98 134.08 127.98 134.11 127.98 134.14 127.98 134.17 127.98 134.2 127.98 134.23 127.98 134.26 127.98 134.28 127.98 134.31 127.98 134.34 127.98 134.37 127.98 134.4 127.98 134.43 127.98 134.46 127.98 134.48 127.98 134.51 127.98 134.54 127.98 134.57 127.98 134.6 127.98 134.63 127.98 134.66 127.98 134.68 127.98 134.71 127.98 134.74 127.99 134.77 127.99 134.8 127.99 134.83 127.99 134.86 127.99 134.88 127.99 134.91 127.99 134.94 127.99 134.97 127.99 135 127.99 135.03 127.99 135.06 127.99 135.08 127.99 135.11 127.99 135.14 127.99 135.17 127.99 135.2 127.99 135.23 127.99 135.26 127.99 135.28 127.99 135.31 127.99 135.34 127.99 135.37 127.99 135.4 127.99 135.43 127.99 135.46 127.99 135.48 127.99 135.51 127.99 135.54 127.99 135.57 127.99 135.6 127.99 135.63 127.99 135.66 127.99 135.68 127.99 135.71 127.99 135.74 127.99 135.77 127.99 135.8 127.99 135.83 127.99 135.86 127.99 135.88 127.99 135.91 127.99 135.94 127.99 135.97 127.99 136 127.99 136.03 127.99 136.06 127.99 136.08 127.99 136.11 127.99 136.14 127.99 136.17 127.99 136.2 127.99 136.23 128 136.26 128 136.28 128 136.31 128 136.34 128 136.37 128 136.4 128 136.43 128 136.46 128 136.48 128 136.51 128 136.54 128 136.57 128 136.6 128 136.63 128 136.66 128 136.68 128 136.71 128 136.74 128 136.77 128 136.8 128 136.83 128 136.86 128 136.88 128 136.91 128 136.94 128 136.97 128 137 128 137.03 128 137.06 128 137.08 128 137.11 128 137.14 128 137.17 128 137.2 128 137.23 128 137.26 128 137.28 128 137.31 128 137.34 128 137.37 128 137.4 128 137.43 128 137.46 128 137.48 128 137.51 128 137.54 128 137.57 128 137.6 128 137.63 128 137.66 128 137.68 128 137.71 128 137.74 128 137.77 128 137.8 128 137.83 128.01 137.86 128.01 137.88 128.01 137.91 128.01 137.94 128.01 137.97 128.01 138 128.01 138.03 128.01 138.06 128.01 138.08 128.01 138.11 128.01 138.14 128.01 138.17 128.01 138.2 128.01 138.23 128.01 138.26 128.01 138.28 128.01 138.31 128.01 138.34 128.01 138.37 128.01 138.4 128.01 138.43 128.01 138.46 128.01 138.48 128.01 138.51 128.01 138.54 128.01 138.57 128.01 138.6 128.01 138.63 128.01 138.66 128.01 138.68 128.01 138.71 128.01 138.74 128.01 138.77 128.01 138.8 128.01 138.83 128.01 138.86 128.01 138.88 128.01 138.91 128.01 138.94 128.01 138.97 128.01 139 128.01 139.03 128.01 139.06 128.01 139.08 128.01 139.11 128.01 139.14 128.01 139.17 128.01 139.2 128.01 139.23 128.01 139.26 128.01 139.28 128.01 139.31 128.01 139.34 128.01 139.37 128.01 139.4 128.01 139.43 128.01 139.46 128.01 139.48 128.01 139.51 128.01 139.54 128.01 139.57 128.01 139.6 128.02 139.63 128.02 139.66 128.02 139.68 128.02 139.71 128.02 139.74 128.02 139.77 128.02 139.8 128.02 139.83 128.02 139.86 128.02 139.88 128.02 139.91 128.02 139.94 128.02 139.97 128.02 140 128.02 140.03 128.02 140.06 128.02 140.08 128.02 140.11 128.02 140.14 128.02 140.17 128.02 140.2 128.02 140.23 128.02 140.26 128.02 140.29 128.02 140.31 128.02 140.34 128.02 140.37 128.02 140.4 128.02 140.43 128.02 140.46 128.02 140.49 128.02 140.51 128.02 140.54 128.02 140.57 128.02 140.6 128.02 140.63 128.02 140.66 128.02 140.69 128.02 140.71 128.02 140.74 128.02 140.77 128.02 140.8 128.02 140.83 128.02 140.86 128.02 140.89 128.02 140.91 128.02 140.94 128.02 140.97 128.02 141 128.02 141.03 128.02 141.06 128.02 141.09 128.02 141.11 128.02 141.14 128.02 141.17 128.02 141.2 128.02 141.23 128.02 141.26 128.02 141.29 128.02 141.31 128.02 141.34 128.02 141.37 128.02 141.4 128.02 141.43 128.02 141.46 128.02 141.49 128.02 141.51 128.03 141.54 128.03 141.57 128.03 141.6 128.03 141.63 128.03 141.66 128.03 141.69 128.03 141.71 128.03 141.74 128.03 141.77 128.03 141.8 128.03 141.83 128.03 141.86 128.03 141.89 128.03 141.91 128.03 141.94 128.03 141.97 128.03 142 128.03 142.03 128.03 142.06 128.03 142.09 128.03 142.11 128.03 142.14 128.03 142.17 128.03 142.2 128.03 142.23 128.03 142.26 128.03 142.29 128.03 142.31 128.03 142.34 128.03 142.37 128.03 142.4 128.03 142.43 128.03 142.46 128.03 142.49 128.03 142.51 128.03 142.54 128.03 142.57 128.03 142.6 128.03 142.63 128.03 142.66 128.03 142.69 128.03 142.71 128.03 142.74 128.03 142.77 128.03 142.8 128.03 142.83 128.03 142.86 128.03 142.89 128.03 142.91 128.03 142.94 128.03 142.97 128.03 143 128.03 143.03 128.03 143.06 128.03 143.09 128.03 143.11 128.03 143.14 128.03 143.17 128.03 143.2 128.03 143.23 128.03 143.26 128.03 143.29 128.03 143.31 128.03 143.34 128.03 143.37 128.03 143.4 128.03 143.43 128.03 143.46 128.03 143.49 128.03 143.51 128.03 143.54 128.03 143.57 128.03 143.6 128.03 143.63 128.03 143.66 128.04 143.69 128.04 143.71 128.04 143.74 128.04 143.77 128.04 143.8 128.04 143.83 128.04 143.86 128.04 143.89 128.04 143.91 128.04 143.94 128.04 143.97 128.04 144 128.04 144.03 128.04 144.06 128.04 144.09 128.04 144.11 128.04 144.14 128.04 144.17 128.04 144.2 128.04 144.23 128.04 144.26 128.04 144.29 128.04 144.31 128.04 144.34 128.04 144.37 128.04 144.4 128.04 144.43 128.04 144.46 128.04 144.49 128.04 144.51 128.04 144.54 128.04 144.57 128.04 144.6 128.04 144.63 128.04 144.66 128.04 144.69 128.04 144.71 128.04 144.74 128.04 144.77 128.04 144.8 128.04 144.83 128.04 144.86 128.04 144.89 128.04 144.91 128.04 144.94 128.04 144.97 128.04 145 128.04 145.03 128.04 145.06 128.04 145.09 128.04 145.11 128.04 145.14 128.04 145.17 128.04 145.2 128.04 145.23 128.04 145.26 128.04 145.29 128.04 145.31 128.04 145.34 128.04 145.37 128.04 145.4 128.04"/>
      </g>
    </g>
    <g opacity="0" class="guide zoomslider" stroke="#000000" stroke-opacity="0.000" id="img-0cadd079-11">
      <g fill="#EAEAEA" stroke-width="0.3" stroke-opacity="0" stroke="#6A6A6A" id="img-0cadd079-12">
        <rect x="140.4" y="15.61" width="4" height="4"/>
        <g class="button_logo" fill="#6A6A6A" id="img-0cadd079-13">
          <path d="M141.2,17.21 L 142 17.21 142 16.41 142.8 16.41 142.8 17.21 143.6 17.21 143.6 18.01 142.8 18.01 142.8 18.81 142 18.81 142 18.01 141.2 18.01 z"/>
        </g>
      </g>
      <g fill="#EAEAEA" id="img-0cadd079-14">
        <rect x="120.9" y="15.61" width="19" height="4"/>
      </g>
      <g class="zoomslider_thumb" fill="#6A6A6A" id="img-0cadd079-15">
        <rect x="129.4" y="15.61" width="2" height="4"/>
      </g>
      <g fill="#EAEAEA" stroke-width="0.3" stroke-opacity="0" stroke="#6A6A6A" id="img-0cadd079-16">
        <rect x="116.4" y="15.61" width="4" height="4"/>
        <g class="button_logo" fill="#6A6A6A" id="img-0cadd079-17">
          <path d="M117.2,17.21 L 119.6 17.21 119.6 18.01 117.2 18.01 z"/>
        </g>
      </g>
    </g>
  </g>
</g>
  <g class="guide ylabels" font-size="2.82" font-family="'PT Sans Caption','Helvetica Neue','Helvetica',sans-serif" fill="#6C606B" id="img-0cadd079-18">
    <text x="28.1" y="276.74" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">-1.0×10¹¹</text>
    <text x="28.1" y="247.62" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">-8.0×10¹⁰</text>
    <text x="28.1" y="218.49" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">-6.0×10¹⁰</text>
    <text x="28.1" y="189.37" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">-4.0×10¹⁰</text>
    <text x="28.1" y="160.24" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">-2.0×10¹⁰</text>
    <text x="28.1" y="131.12" text-anchor="end" dy="0.35em" visibility="visible" gadfly:scale="1.0">0</text>
    <text x="28.1" y="101.99" text-anchor="end" dy="0.35em" visibility="visible" gadfly:scale="1.0">2.0×10¹⁰</text>
    <text x="28.1" y="72.86" text-anchor="end" dy="0.35em" visibility="visible" gadfly:scale="1.0">4.0×10¹⁰</text>
    <text x="28.1" y="43.74" text-anchor="end" dy="0.35em" visibility="visible" gadfly:scale="1.0">6.0×10¹⁰</text>
    <text x="28.1" y="14.61" text-anchor="end" dy="0.35em" visibility="visible" gadfly:scale="1.0">8.0×10¹⁰</text>
    <text x="28.1" y="-14.51" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">1.0×10¹¹</text>
    <text x="28.1" y="-43.64" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">1.2×10¹¹</text>
    <text x="28.1" y="-72.77" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">1.4×10¹¹</text>
    <text x="28.1" y="-101.89" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">1.6×10¹¹</text>
    <text x="28.1" y="-131.02" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="1.0">1.8×10¹¹</text>
    <text x="28.1" y="247.62" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-8.00×10¹⁰</text>
    <text x="28.1" y="240.34" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-7.50×10¹⁰</text>
    <text x="28.1" y="233.06" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-7.00×10¹⁰</text>
    <text x="28.1" y="225.77" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-6.50×10¹⁰</text>
    <text x="28.1" y="218.49" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-6.00×10¹⁰</text>
    <text x="28.1" y="211.21" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-5.50×10¹⁰</text>
    <text x="28.1" y="203.93" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-5.00×10¹⁰</text>
    <text x="28.1" y="196.65" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-4.50×10¹⁰</text>
    <text x="28.1" y="189.37" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-4.00×10¹⁰</text>
    <text x="28.1" y="182.09" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-3.50×10¹⁰</text>
    <text x="28.1" y="174.8" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-3.00×10¹⁰</text>
    <text x="28.1" y="167.52" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-2.50×10¹⁰</text>
    <text x="28.1" y="160.24" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-2.00×10¹⁰</text>
    <text x="28.1" y="152.96" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-1.50×10¹⁰</text>
    <text x="28.1" y="145.68" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-1.00×10¹⁰</text>
    <text x="28.1" y="138.4" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">-5.00×10⁹</text>
    <text x="28.1" y="131.12" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">0</text>
    <text x="28.1" y="123.83" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">5.00×10⁹</text>
    <text x="28.1" y="116.55" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.00×10¹⁰</text>
    <text x="28.1" y="109.27" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.50×10¹⁰</text>
    <text x="28.1" y="101.99" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">2.00×10¹⁰</text>
    <text x="28.1" y="94.71" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">2.50×10¹⁰</text>
    <text x="28.1" y="87.43" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">3.00×10¹⁰</text>
    <text x="28.1" y="80.14" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">3.50×10¹⁰</text>
    <text x="28.1" y="72.86" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">4.00×10¹⁰</text>
    <text x="28.1" y="65.58" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">4.50×10¹⁰</text>
    <text x="28.1" y="58.3" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">5.00×10¹⁰</text>
    <text x="28.1" y="51.02" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">5.50×10¹⁰</text>
    <text x="28.1" y="43.74" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">6.00×10¹⁰</text>
    <text x="28.1" y="36.46" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">6.50×10¹⁰</text>
    <text x="28.1" y="29.17" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">7.00×10¹⁰</text>
    <text x="28.1" y="21.89" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">7.50×10¹⁰</text>
    <text x="28.1" y="14.61" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">8.00×10¹⁰</text>
    <text x="28.1" y="7.33" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">8.50×10¹⁰</text>
    <text x="28.1" y="0.05" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">9.00×10¹⁰</text>
    <text x="28.1" y="-7.23" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">9.50×10¹⁰</text>
    <text x="28.1" y="-14.51" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.00×10¹¹</text>
    <text x="28.1" y="-21.8" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.05×10¹¹</text>
    <text x="28.1" y="-29.08" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.10×10¹¹</text>
    <text x="28.1" y="-36.36" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.15×10¹¹</text>
    <text x="28.1" y="-43.64" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.20×10¹¹</text>
    <text x="28.1" y="-50.92" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.25×10¹¹</text>
    <text x="28.1" y="-58.2" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.30×10¹¹</text>
    <text x="28.1" y="-65.48" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.35×10¹¹</text>
    <text x="28.1" y="-72.77" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.40×10¹¹</text>
    <text x="28.1" y="-80.05" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.45×10¹¹</text>
    <text x="28.1" y="-87.33" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.50×10¹¹</text>
    <text x="28.1" y="-94.61" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.55×10¹¹</text>
    <text x="28.1" y="-101.89" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="10.0">1.60×10¹¹</text>
    <text x="28.1" y="276.74" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="0.5">-1×10¹¹</text>
    <text x="28.1" y="131.12" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="0.5">0</text>
    <text x="28.1" y="-14.51" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="0.5">1×10¹¹</text>
    <text x="28.1" y="-160.14" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="0.5">2×10¹¹</text>
    <text x="28.1" y="247.62" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-8.00×10¹⁰</text>
    <text x="28.1" y="240.34" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-7.50×10¹⁰</text>
    <text x="28.1" y="233.06" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-7.00×10¹⁰</text>
    <text x="28.1" y="225.77" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-6.50×10¹⁰</text>
    <text x="28.1" y="218.49" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-6.00×10¹⁰</text>
    <text x="28.1" y="211.21" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-5.50×10¹⁰</text>
    <text x="28.1" y="203.93" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-5.00×10¹⁰</text>
    <text x="28.1" y="196.65" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-4.50×10¹⁰</text>
    <text x="28.1" y="189.37" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-4.00×10¹⁰</text>
    <text x="28.1" y="182.09" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-3.50×10¹⁰</text>
    <text x="28.1" y="174.8" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-3.00×10¹⁰</text>
    <text x="28.1" y="167.52" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-2.50×10¹⁰</text>
    <text x="28.1" y="160.24" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-2.00×10¹⁰</text>
    <text x="28.1" y="152.96" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-1.50×10¹⁰</text>
    <text x="28.1" y="145.68" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-1.00×10¹⁰</text>
    <text x="28.1" y="138.4" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">-5.00×10⁹</text>
    <text x="28.1" y="131.12" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">0</text>
    <text x="28.1" y="123.83" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">5.00×10⁹</text>
    <text x="28.1" y="116.55" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.00×10¹⁰</text>
    <text x="28.1" y="109.27" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.50×10¹⁰</text>
    <text x="28.1" y="101.99" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">2.00×10¹⁰</text>
    <text x="28.1" y="94.71" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">2.50×10¹⁰</text>
    <text x="28.1" y="87.43" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">3.00×10¹⁰</text>
    <text x="28.1" y="80.14" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">3.50×10¹⁰</text>
    <text x="28.1" y="72.86" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">4.00×10¹⁰</text>
    <text x="28.1" y="65.58" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">4.50×10¹⁰</text>
    <text x="28.1" y="58.3" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">5.00×10¹⁰</text>
    <text x="28.1" y="51.02" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">5.50×10¹⁰</text>
    <text x="28.1" y="43.74" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">6.00×10¹⁰</text>
    <text x="28.1" y="36.46" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">6.50×10¹⁰</text>
    <text x="28.1" y="29.17" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">7.00×10¹⁰</text>
    <text x="28.1" y="21.89" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">7.50×10¹⁰</text>
    <text x="28.1" y="14.61" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">8.00×10¹⁰</text>
    <text x="28.1" y="7.33" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">8.50×10¹⁰</text>
    <text x="28.1" y="0.05" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">9.00×10¹⁰</text>
    <text x="28.1" y="-7.23" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">9.50×10¹⁰</text>
    <text x="28.1" y="-14.51" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.00×10¹¹</text>
    <text x="28.1" y="-21.8" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.05×10¹¹</text>
    <text x="28.1" y="-29.08" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.10×10¹¹</text>
    <text x="28.1" y="-36.36" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.15×10¹¹</text>
    <text x="28.1" y="-43.64" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.20×10¹¹</text>
    <text x="28.1" y="-50.92" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.25×10¹¹</text>
    <text x="28.1" y="-58.2" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.30×10¹¹</text>
    <text x="28.1" y="-65.48" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.35×10¹¹</text>
    <text x="28.1" y="-72.77" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.40×10¹¹</text>
    <text x="28.1" y="-80.05" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.45×10¹¹</text>
    <text x="28.1" y="-87.33" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.50×10¹¹</text>
    <text x="28.1" y="-94.61" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.55×10¹¹</text>
    <text x="28.1" y="-101.89" text-anchor="end" dy="0.35em" visibility="hidden" gadfly:scale="5.0">1.60×10¹¹</text>
  </g>
  <g font-size="3.88" font-family="'PT Sans','Helvetica Neue','Helvetica',sans-serif" fill="#564A55" stroke="#000000" stroke-opacity="0.000" id="img-0cadd079-19">
    <text x="8.81" y="70.86" text-anchor="middle" dy="0.35em" transform="rotate(-90, 8.81, 72.86)">Error</text>
  </g>
  <g font-size="3.88" font-family="'PT Sans','Helvetica Neue','Helvetica',sans-serif" fill="#564A55" stroke="#000000" stroke-opacity="0.000" id="img-0cadd079-20">
    <text x="88.25" y="10.61" text-anchor="middle">Convergence Graph</text>
  </g>
</g>
<defs>
  <clipPath id="img-0cadd079-4">
  <path d="M29.1,12.61 L 147.4 12.61 147.4 133.12 29.1 133.12" />
</clipPath>
</defs>
<script> <![CDATA[
(function(N){var k=/[\.\/]/,L=/\s*,\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if("undefined"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if("undefined"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)"zIndex"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&
(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],"zIndex"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d["*"] ],n=2;n--;)if(d=
f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if("function"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,
[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp("(?:\\.|\\/|^)"+k+"(?:\\.|\\/|$)")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if("*"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&
q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,
arguments)};return w.on(a,f)};w.version="0.4.2";w.toString=function(){return"You are running Eve 0.4.2"};"undefined"!=typeof module&&module.exports?module.exports=w:"function"===typeof define&&define.amd?define("eve",[],function(){return w}):N.eve=w})(this);
(function(N,k){"function"===typeof define&&define.amd?define("Snap.svg",["eve"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||"[object Array]"==Object.prototype.toString.call(a)},A=0,w="M"+(+new Date).toString(36),z=function(a){if(null==
a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a("mina.stop."+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];
for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a("mina.finish."+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,
set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),
1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};
return N.mina=e}("undefined"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,"array")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?"100%":c,null==t?"100%":t)}function v(c,a){if(a){"#text"==c&&(c=G.doc.createTextNode(a.text||""));"string"==typeof c&&(c=v(c));if("string"==typeof a)return"xlink:"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):"xml:"==a.substring(0,4)?c.getAttributeNS(la,
a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?"xlink:"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):"xml:"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return"finite"==a?isFinite(c):"array"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:"null"==a&&null===c||a==typeof c&&null!==c||"object"==
a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if("function"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join("\u2400"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,
e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\s)(\w+)\(([^)]+)\)/g,function(c,b,m){m=m.split(/\s*,\s*|\s+/);"rotate"==b&&1==m.length&&m.push(0,0);"scale"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));"skewX"==b?a.push(["m",1,0,I.tan(z(m[0])),1,0,0]):"skewY"==b?a.push(["m",1,I.tan(z(m[0])),
0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;"t"==B&&2==d?m.translate(h[1],0):"t"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):"r"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],
h[2],h[3])):"s"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):"m"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t="linearGradient"==c.type||"radialGradient"==c.type?c.node.getAttribute("gradientTransform"):"pattern"==c.type?c.node.getAttribute("patternTransform"):
c.node.getAttribute("transform");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\.{3}|\u2026/g,c._.transform||aa):d(t),y(t,"array")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select("svg")||a(0,0);var t=c.select("defs"),t=null==t?!1:t.node;t||(t=r("defs",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&
x(c.node.ownerSVGElement)||a.select("svg")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(".svg---mgr");B||(B=v("rect"),v(B,{x:-9E9,y:-9E9,width:10,height:10,"class":"svg---mgr",
fill:"none"}),f.appendChild(B));switch(c.type){case "rect":e("rx",b),e("ry",h);case "image":e("width",b),e("height",h);case "text":e("x",b);e("y",h);break;case "circle":e("cx",b);e("cy",h);e("r",b);break;case "ellipse":e("cx",b);e("cy",h);e("rx",b);e("ry",h);break;case "line":e("x1",b);e("x2",b);e("y1",h);e("y2",h);break;case "marker":e("refX",b);e("markerWidth",b);e("refY",h);e("markerHeight",h);break;case "radialGradient":e("fx",b);e("fy",h);break;case "tspan":e("dx",b);e("dy",h);break;default:e(a,
b)}f.removeChild(B);return d}function q(c){y(c,"array")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)"set"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=
{};this._={transform:[]};c.snap=a;E[a]=this;"g"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&"svg"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName("desc")[0];f=c.getElementsByTagName("defs")[0];m||(m=v("desc"),m.appendChild(l.createTextNode("Created with Snap")),
b.node.appendChild(m));f||(f=v("defs"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r("svg",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&"svg"==c.tagName.toLowerCase()?new s(c):c.tagName&&"object"==c.tagName.toLowerCase()&&"image/svg+xml"==c.type?new s(c.contentDocument.getElementsByTagName("svg")[0]):new e(c)}a.version="0.3.0";a.toString=function(){return"Snap v"+
this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h="hasOwnProperty",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa="",$=Object.prototype.toString,F=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\))\s*$/i;a._.separator=
RegExp("[,\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]+");var S=RegExp("[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*"),X={hs:1,rg:1},W=RegExp("([a-z])[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)",
"ig"),ma=RegExp("([rstm])[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)","ig"),Z=RegExp("(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*",
"ig"),na=0,ba="S"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m="http://www.w3.org/1999/xlink",la="http://www.w3.org/2000/svg",E={},ca=a.url=function(c){return"url('#"+c+"')"};a._.$=v;a._.id=V;a.format=function(){var c=/\{([^\}]+)\}/g,a=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),"function"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+""};return function(a,m){return J(a).replace(c,
function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,"finite")?b:10;if(y(c,"array"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf("-")+1)return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:ka};if("none"==c)return{r:-1,g:-1,b:-1,hex:"none",toString:ka};!X[h](c.toLowerCase().substring(0,
2))&&"#"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),"%"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),"%"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),"%"==d[2].slice(-1)&&(e*=2.55),"rgba"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),
d[3]&&"%"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),"%"==d[0].slice(-1)&&(b/=100),m=K(d[1]),"%"==d[1].slice(-1)&&(m/=100),e=K(d[2]),"%"==d[2].slice(-1)&&(e/=100),"deg"!=d[0].slice(-3)&&"\u00b0"!=d[0].slice(-1)||(b/=360),"hsba"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&"%"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),"%"==d[0].slice(-1)&&(b/=100),m=K(d[1]),"%"==d[1].slice(-1)&&(m/=100),e=K(d[2]),"%"==d[2].slice(-1)&&(e/=100),
"deg"!=d[0].slice(-3)&&"\u00b0"!=d[0].slice(-1)||(b/=360),"hsla"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&"%"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex="#"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,"finite")?f:1;return c}return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,
b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,"finite")){var e=I.round;return"rgba("+[e(c),e(a),e(b),+m.toFixed(2)]+")"}return"#"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName("head")[0]||G.doc.getElementsByTagName("svg")[0];T=A(function(c){if("red"==c.toLowerCase())return"rgb(255, 0, 0)";a.style.color="rgb(255, 0, 0)";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue("color");return"rgb(255, 0, 0)"==c?null:c});return T(c)},
qa=function(){return"hsb("+[this.h,this.s,this.b]+")"},ra=function(){return"hsl("+[this.h,this.s,this.l]+")"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:"rgba("+[this.r,this.g,this.b,this.opacity]+")"},D=function(c,b,m){null==b&&y(c,"object")&&"r"in c&&"g"in c&&"b"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,
g:b,b:m,opacity:y(e,"finite")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,"finite")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,"object")&&"h"in c&&"s"in c&&"b"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,"object")&&"h"in c&&"s"in c&&"l"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,"string")&&(c=a.getRGB(c)),y(c,"object")&&"r"in c&&"g"in c&&"b"in c&&!("error"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:"none"},
c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,"object")&&"h"in c&&"s"in c&&"b"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,"object")&&"h"in c&&"s"in c&&"l"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=
h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*
m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,"array")&&y(c[0],"array")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});"m"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c="l",a="m"==a?"l":"L");"o"==c&&1==h.length&&e.push([a,h[0] ]);if("r"==c)e.push([a].concat(h));else for(;h.length>=
m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,"array")&&y(c[0],"array")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp("^[a-z][\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*-?\\.?\\d",
"i");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;("svg"!=a.type&&!b.ownerSVGElement||"svg"==a.type&&(!b.parentNode||"ownerSVGElement"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,
b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&"#"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,"xlink:href");a&&"#"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr("xlink:href","#"+a)}))}var e=c.selectAll("*"),h,d=/^\s*url\(("|'|)(.*)\1\)\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,"fill");a(h,"stroke");a(h,"filter");a(h,"mask");a(h,"clip-path");b(h);var t=v(h.node,
"id");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?"<"+this.type:"",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=" "+b[e].name+'="'+b[e].value.replace(/"/g,'\\"')+'"';if(m.length){c&&(a+=">");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:
1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+="</"+this.type+">")}else c&&(a+="/>");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,"string"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k("snap.util.getattr."+c,this).firstDefined();for(var m in c)c[h](m)&&k("snap.util.attr."+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;"use"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr("x")||
0,b.attr("y")||0))),b.original)b=b.original;else var e=b.attr("xlink:href"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf("#")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};
c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;"svg"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&
("linearGradient"==this.type||"radialGradient"==this.type?v(this.node,{gradientTransform:this.matrix}):"pattern"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if("set"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};
c.prepend=function(c){if(c){if("set"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if("set"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});
this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,
c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=
function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c="linearGradient"==this.type||"radialGradient"==this.type||"pattern"==this.type?r(this.type,this.node.parentNode):r("use",this.node.parentNode);v(c.node,{"xlink:href":"#"+a});c.original=this;return c};var l=/\S+/g;c.addClass=function(c){var a=(c||
"").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(" ");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||"").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(" ");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};
c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||"").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(" ");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,"id")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,
a,b,m){var e=r("pattern",u(this));null==c&&(c=this.getBBox());y(c,"object")&&"x"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:"userSpaceOnUse",id:e.id,viewBox:[c,a,b,m].join(" ")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r("marker",u(this));null==c&&(c=this.getBBox());y(c,"object")&&"x"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(" "),markerWidth:b,markerHeight:m,
orient:"auto",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){"function"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);
return c};a.animate=function(c,a,b,m,e,h){"function"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once("mina.finish."+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){"function"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=
n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,"array")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k("snap.animcreated."+T.id,p);k.once("mina.finish."+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once("mina.stop."+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||
{};if(0==arguments.length)return k("snap.data.get."+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,"object")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k("snap.data.get."+this.id,this,m[c],c);return m[c]}m[c]=b;k("snap.data.set."+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement("div");
c=J(c);c.match(/^\s*<\s*svg(?:\s|>)/)||(c="<svg>"+c+"</svg>",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName("svg")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);
"string"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on("snap.util.getattr",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(".")+1),a=c.replace(/[A-Z]/g,function(c){return"-"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={"alignment-baseline":0,"baseline-shift":0,clip:0,"clip-path":0,
"clip-rule":0,color:0,"color-interpolation":0,"color-interpolation-filters":0,"color-profile":0,"color-rendering":0,cursor:0,direction:0,display:0,"dominant-baseline":0,"enable-background":0,fill:0,"fill-opacity":0,"fill-rule":0,filter:0,"flood-color":0,"flood-opacity":0,font:0,"font-family":0,"font-size":0,"font-size-adjust":0,"font-stretch":0,"font-style":0,"font-variant":0,"font-weight":0,"glyph-orientation-horizontal":0,"glyph-orientation-vertical":0,"image-rendering":0,kerning:0,"letter-spacing":0,
"lighting-color":0,marker:0,"marker-end":0,"marker-mid":0,"marker-start":0,mask:0,opacity:0,overflow:0,"pointer-events":0,"shape-rendering":0,"stop-color":0,"stop-opacity":0,stroke:0,"stroke-dasharray":0,"stroke-dashoffset":0,"stroke-linecap":0,"stroke-linejoin":0,"stroke-miterlimit":0,"stroke-opacity":0,"stroke-width":0,"text-anchor":0,"text-decoration":0,"text-rendering":0,"unicode-bidi":0,visibility:0,"word-spacing":0,"writing-mode":0};k.on("snap.util.attr",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(".")+
1);b[a]=c;var m=a.replace(/-(\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return"-"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,"function"))m=b,b=a,a=null;else if(y(a,"object")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+"="+encodeURIComponent(a[f]));a=d.join("&")}e.open(a?"POST":"GET",c,!0);a&&(e.setRequestHeader("X-Requested-With","XMLHttpRequest"),
e.setRequestHeader("Content-type","application/x-www-form-urlencoded"));b&&(k.once("snap.ajax."+h+".0",b),k.once("snap.ajax."+h+".200",b),k.once("snap.ajax."+h+".304",b));e.onreadystatechange=function(){4==e.readyState&&k("snap.ajax."+h+"."+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&"svg"==e.tagName){b=
e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==
d&&"[object SVGMatrix]"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,
e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,
this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+
a)].toFixed(4)};n.toString=function(){return"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));
p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return"m"+[this.get(0),
this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?"t"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:"")+(1!=a.scalex||1!=a.scaley?"s"+[a.scalex,a.scaley,0,0]:"")+(a.rotate?"r"+[+a.rotate.toFixed(4),0,0]:"")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&
("radialGradient"==d.node.firstChild.tagName||"linearGradient"==d.node.firstChild.tagName||"pattern"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if("radialGradient"==d.type||"linearGradient"==d.type||"pattern"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=
x}}function z(a){k.stop();a==+a&&(a+="px");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);"tspan"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\(#?([^)]+)\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x="";k.on("snap.util.attr.mask",
function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if("mask"==a.type)var d=a;else d=n("mask",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on("snap.util.attr.clip",a);k.on("snap.util.attr.clip-path",a);k.on("snap.util.attr.clipPath",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if("clipPath"==a.type)var d=a;else d=
n("clipPath",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{"clip-path":l(d.id)})}});k.on("snap.util.attr.fill",w("fill"));k.on("snap.util.attr.stroke",w("stroke"));var G=/^([lr])(?:\(([^)]*)\))?(.*)$/i;k.on("snap.util.grad.parse",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\s*,\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split("-");b=b.map(function(a){a=a.split(":");var b={color:a[0]};a[1]&&
(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on("snap.util.attr.d",function(b){k.stop();p(b,"array")&&p(b[0],"array")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on("snap.util.attr.#text",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on("snap.util.attr.path",function(a){k.stop();this.attr({d:a})})(-1);
k.on("snap.util.attr.class",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on("snap.util.attr.viewBox",function(a){a=p(a,"object")&&"x"in a?[a.x,a.y,a.width,a.height].join(" "):p(a,"array")?a.join(" "):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on("snap.util.attr.transform",function(a){this.transform(a);k.stop()})(-1);k.on("snap.util.attr.r",function(a){"rect"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on("snap.util.attr.textpath",function(a){k.stop();if("text"==this.type){var d,
f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,"string")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr("id"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({"xlink:href":"#"+d});else{for(a=e("textPath",{"xlink:href":"#"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);
k.on("snap.util.attr.text",function(a){if("text"==this.type){for(var b=this.node,d=function(a){var b=e("tspan");if(p(a,"array"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on("snap.util.attr.fontSize",z)(-1);k.on("snap.util.attr.font-size",z)(-1);k.on("snap.util.getattr.transform",function(){k.stop();
return this.transform()})(-1);k.on("snap.util.getattr.textpath",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue("marker-"+d);return"none"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d="marker"+a.charAt(0).toUpperCase()+a.substring(1);if(""==b||!b)this.node.style[d]="none";else if("marker"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});
this.node.style[d]=l(f)}}}k.on("snap.util.getattr.marker-end",b("end"))(-1);k.on("snap.util.getattr.markerEnd",b("end"))(-1);k.on("snap.util.getattr.marker-start",b("start"))(-1);k.on("snap.util.getattr.markerStart",b("start"))(-1);k.on("snap.util.getattr.marker-mid",b("mid"))(-1);k.on("snap.util.getattr.markerMid",b("mid"))(-1);k.on("snap.util.attr.marker-end",d("end"))(-1);k.on("snap.util.attr.markerEnd",d("end"))(-1);k.on("snap.util.attr.marker-start",d("start"))(-1);k.on("snap.util.attr.markerStart",
d("start"))(-1);k.on("snap.util.attr.marker-mid",d("mid"))(-1);k.on("snap.util.attr.markerMid",d("mid"))(-1)})();k.on("snap.util.getattr.r",function(){if("rect"==this.type&&e(this.node,"rx")==e(this.node,"ry"))return k.stop(),e(this.node,"rx")})(-1);k.on("snap.util.getattr.text",function(){if("text"==this.type||"tspan"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on("snap.util.getattr.#text",function(){return this.node.textContent})(-1);k.on("snap.util.getattr.viewBox",
function(){k.stop();var b=e(this.node,"viewBox");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on("snap.util.getattr.points",function(){var a=e(this.node,"points");k.stop();if(a)return a.split(s)})(-1);k.on("snap.util.getattr.path",function(){var a=e(this.node,"d");k.stop();return a})(-1);k.on("snap.util.getattr.class",function(){return this.node.className.baseVal})(-1);k.on("snap.util.getattr.fontSize",f)(-1);k.on("snap.util.getattr.font-size",f)(-1)});C.plugin(function(a,v,y,
M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={"+":function(a,b){return a+b},"-":function(a,b){return a-b},"/":function(a,b){return a/b},"*":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\s*([+\-\/*])\s*=\s*([\d.eE+\-]+)\s*([^\d\s]+)?\s*$/;k.on("snap.util.attr",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(".")+1),q=this.attr(b),e={};k.stop();var l=a[3]||"",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),
a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on("snap.util.equal",function(a,b){var q=f(this.attr(a)||""),e=f(b).match(u);if(e){k.stop();var l=e[3]||"",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,"object")&&"[object Object]"==
a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el("rect",e)};w.circle=function(a,d,k){var p;z(a,"object")&&"[object Object]"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el("circle",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement("img"),b=M.doc.body;p.style.cssText="position:absolute;left:-9999em;top:-9999em";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;
b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el("image");if(z(f,"object")&&"src"in f)q.attr(f);else if(null!=f){var e={"xlink:href":f,preserveAspectRatio:"none"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,"object")&&"[object Object]"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el("ellipse",b)};
w.path=function(a){var d;z(a,"object")&&!z(a,"array")?d=a:a&&(d={d:a});return this.el("path",d)};w.group=w.g=function(a){var d=this.el("g");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,"object")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el("svg",r)};w.mask=function(a){var d=
this.el("mask");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,"object"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:"userSpaceOnUse"};return this.el("pattern",r)};w.use=function(a){return null!=a?(make("use",this.node),a instanceof v&&(a.attr("id")||
a.attr({id:ID()}),a=a.attr("id")),this.el("use",{"xlink:href":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,"object")?p=a:null!=a&&(p={x:a,y:d,text:k||""});return this.el("text",p)};w.line=function(a,d,k,p){var b={};z(a,"object")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el("line",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,"object")&&!z(a,"array")?d=a:null!=a&&(d={points:a});return this.el("polyline",d)};
w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,"object")&&!z(a,"array")?d=a:null!=a&&(d={points:a});return this.el("polygon",d)};(function(){function d(){return this.selectAll("stop")}function n(b,d){var f=e("stop"),k={offset:+d+"%"};b=a.color(b);k["stop-color"]=b.hex;1>b.opacity&&(k["stop-opacity"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if("linearGradient"==this.type){var b=e(this.node,"x1")||0,d=e(this.node,"x2")||
1,f=e(this.node,"y1")||0,k=e(this.node,"y2")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k("snap.util.grad.parse",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p="l"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:"userSpaceOnUse"});
var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)"offset"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make("linearGradient",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make("radialGradient",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});
return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement("div"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:"http://www.w3.org/2000/svg"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,
b;a;)b=a.nextSibling,"defs"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*
d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(" ")}}function z(){return this.join(",").replace(N,"$1")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr("d"));
a=I(a);for(var n,p,D,q,O="",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if("M"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=["C"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=["M"+e(n.x),e(n.y)+"C"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=
D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,
"array")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,
0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],"M"==x[0])h=k=x[1],f=s=x[2];else{"C"==x[0]?(x=[h,f].concat(x.slice(1)),
h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],"M"==c[0])l=r=c[1],n=O=c[2];else{"C"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=
0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?"y":"x",S=0.001>Z(C.x-B.x)?"y":"x",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||
ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}
function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],"M"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[["M",+a+ +h,b],["l",d-2*h,0],["a",h,h,0,0,1,h,h],["l",0,e-2*h],["a",h,h,0,0,1,
-h,h],["l",2*h-d,0],["a",h,h,0,0,1,-h,-h],["l",0,2*h-e],["a",h,h,0,0,1,h,-h],["z"] ];a=[["M",a,b],["l",d,0],["l",0,e],["l",-d,0],["z"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[["M",l,n],["A",d,d,0,+(180<h-e),0,a,b] ]}else d=[["M",a,b],["m",0,-e],["a",d,e,0,1,1,0,2*e],["a",d,e,0,1,1,0,-2*e],["z"] ];d.toString=z;return d}function G(b){var e=
A(b);if(e.abs)return d(e.abs);Q(b,"array")&&Q(b&&b[0],"array")||(b=a.parsePathString(b));if(!b||!b.length)return[["M",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;"M"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=["M",f,l]);for(var q=3==b.length&&"M"==b[0][0]&&"R"==b[1][0].toUpperCase()&&"Z"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case "A":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+
l;break;case "V":s[1]=+r[1]+l;break;case "H":s[1]=+r[1]+f;break;case "R":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case "O":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case "U":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=["U"].concat(h[h.length-1].slice(-2));break;case "M":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if("R"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,
q)),s=["R"].concat(r.slice(-2));else if("O"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if("U"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=["U"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if("O"!=p)switch(s[0]){case "Z":f=+n;l=+k;break;case "H":f=s[1];break;case "V":l=s[1];break;case "M":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,
e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/
(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);
c=[b,d,k].concat(c).join().split(",");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*
c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return["C",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);
switch(a[0]){case "M":b.X=a[1];b.Y=a[2];break;case "A":a=["C"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case "S":"C"==c||"S"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=["C",c,b].concat(a.slice(1));break;case "T":"Q"==c||"T"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=["C"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case "Q":b.qx=a[1];b.qy=a[2];a=["C"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case "L":a=["C"].concat(h(b.x,b.y,a[1],a[2]));break;case "H":a=["C"].concat(h(b.x,
b.y,a[1],b.y));break;case "V":a=["C"].concat(h(b.x,b.y,b.x,a[1]));break;case "Z":a=["C"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]="A",l&&(u[b]="A"),a.splice(b++,0,["C"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&"M"==a[e][0]&&"M"!=b[e][0]&&(b.splice(e,0,["M",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c="",t="",x=0,v=W(f.length,
l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);"C"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);"A"!=q[x]&&"C"==c&&(q[x]="C");s(f,x);l&&(l[x]&&(c=l[x][0]),"C"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),"A"!=u[x]&&"C"==c&&(u[x]="C"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,
b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push(["C",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L="hasOwnProperty",
N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr("d"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr("d"),
b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[["M",d,e],["H",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr("path")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,
a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return"M"+[a.attr("x1")||0,a.attr("y1")||0,a.attr("x2"),a.attr("y2")]},polyline:function(a){return"M"+a.attr("points")},polygon:function(a){return"M"+a.attr("points")+"z"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);
a.is(b,"array")&&a.is(b&&b[0],"array")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;"M"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push(["M",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case "a":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case "v":q[1]=+(x[1]-n).toFixed(3);break;case "m":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:
n)).toFixed(3)}else for(f[s]=[],"m"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case "z":l=k;n=p;break;case "h":l+=+f[s][x-1];break;case "v":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};
a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type="set";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];
return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){"function"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,"array")&&a.is(p[p.length-1],"array"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once("snap.animcreated."+
a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if("function"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};
v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};
v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());
return a};v.toString=function(){return"Snap\u2018s set"};v.type="set";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case "t":return[b,0,0];case "m":return[b,1,0,0,1,0,0];case "r":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case "s":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\.{3}|\u2026/g,b);b=a.parseTransformString(b)||
[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||"r"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||"s"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[["m",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[["m",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),
to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h="[";p=['"'+a[d][0]+'"'];k=1;for(n=a[d].length;k<n;k++)p[k]="val["+b++ +"]";h+=p+"]";q[d]=h}return Function("val","return Snap.path.toString.call(["+q+"])")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;
p.stroke=p.fill="colour";v.prototype.equal=function(a,b){return k("snap.util.equal",this,a,b).firstDefined()};k.on("snap.util.equal",function(e,k){var r,s;r=q(this.attr(e)||"");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if("colour"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if("transform"==e||"gradientTransform"==e||"patternTransform"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),
w(r,k,function(){return x.getBBox(1)});if("d"==e||"path"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if("points"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w="createTouch"in C.doc;v="click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel".split(" ");
var z={mousedown:"touchstart",mousemove:"touchmove",mouseup:"touchend"},d=function(a,b){var d="y"==a?"scrollTop":"scrollLeft",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?"documentElement":"body"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=
d("y",f),q=d("x",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,
b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d("y",h),k=d("x",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent("on"+b,k);return function(){a.detachEvent("on"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d("y"),l=d("x"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=
u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k("snap.drag.move."+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k("snap.drag.end."+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,"function")&&(this.events=this.events||[],this.events.push({name:d,
f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a["un"+d]=A["un"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;
this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on("snap.drag.start."+this.id,d);b&&k.on("snap.drag.move."+this.id,b);f&&k.on("snap.drag.end."+this.id,f);k("snap.drag.start."+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?"T":"t")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};
A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind("snap.drag.*."+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\s*url\((.+)\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;"svg"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z("filter");z(u,{id:k,filterUnits:"userSpaceOnUse"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on("snap.util.getattr.filter",
function(){k.stop();var d=z(this.node,"filter");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on("snap.util.attr.filter",function(d){if(d instanceof v&&"filter"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&"none"!=d||(k.stop(),this.node.removeAttribute("filter"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation="{def}"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=
function(d,f,k,u,p){"string"==typeof k&&(p=u=k,k=4);"string"!=typeof u&&(p=u,u="#000");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||"#000");return a.format('<feGaussianBlur in="SourceAlpha" stdDeviation="{blur}"/><feOffset dx="{dx}" dy="{dy}" result="offsetblur"/><feFlood flood-color="{color}"/><feComposite in2="offsetblur" operator="in"/><feComponentTransfer><feFuncA type="linear" slope="{opacity}"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in="SourceGraphic"/></feMerge>',
{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=
function(d){null==d&&(d=1);return a.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type="saturate" values="{amount}"/>',{amount:1-
d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type="hueRotate" values="{angle}"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type="table" tableValues="{amount} {amount2}"/><feFuncG type="table" tableValues="{amount} {amount2}"/><feFuncB type="table" tableValues="{amount} {amount2}"/></feComponentTransfer>',{amount:d,
amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}"/><feFuncG type="linear" slope="{amount}"/><feFuncB type="linear" slope="{amount}"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}" intercept="{amount2}"/><feFuncG type="linear" slope="{amount}" intercept="{amount2}"/><feFuncB type="linear" slope="{amount}" intercept="{amount2}"/></feComponentTransfer>',
{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});

]]> </script>
<script> <![CDATA[

(function (glob, factory) {
    // AMD support
    if (typeof define === "function" && define.amd) {
        // Define as an anonymous module
        define("Gadfly", ["Snap.svg"], function (Snap) {
            return factory(Snap);
        });
    } else {
        // Browser globals (glob is window)
        // Snap adds itself to window
        glob.Gadfly = factory(glob.Snap);
    }
}(this, function (Snap) {

var Gadfly = {};

// Get an x/y coordinate value in pixels
var xPX = function(fig, x) {
    var client_box = fig.node.getBoundingClientRect();
    return x * fig.node.viewBox.baseVal.width / client_box.width;
};

var yPX = function(fig, y) {
    var client_box = fig.node.getBoundingClientRect();
    return y * fig.node.viewBox.baseVal.height / client_box.height;
};


Snap.plugin(function (Snap, Element, Paper, global) {
    // Traverse upwards from a snap element to find and return the first
    // note with the "plotroot" class.
    Element.prototype.plotroot = function () {
        var element = this;
        while (!element.hasClass("plotroot") && element.parent() != null) {
            element = element.parent();
        }
        return element;
    };

    Element.prototype.svgroot = function () {
        var element = this;
        while (element.node.nodeName != "svg" && element.parent() != null) {
            element = element.parent();
        }
        return element;
    };

    Element.prototype.plotbounds = function () {
        var root = this.plotroot()
        var bbox = root.select(".guide.background").node.getBBox();
        return {
            x0: bbox.x,
            x1: bbox.x + bbox.width,
            y0: bbox.y,
            y1: bbox.y + bbox.height
        };
    };

    Element.prototype.plotcenter = function () {
        var root = this.plotroot()
        var bbox = root.select(".guide.background").node.getBBox();
        return {
            x: bbox.x + bbox.width / 2,
            y: bbox.y + bbox.height / 2
        };
    };

    // Emulate IE style mouseenter/mouseleave events, since Microsoft always
    // does everything right.
    // See: http://www.dynamic-tools.net/toolbox/isMouseLeaveOrEnter/
    var events = ["mouseenter", "mouseleave"];

    for (i in events) {
        (function (event_name) {
            var event_name = events[i];
            Element.prototype[event_name] = function (fn, scope) {
                if (Snap.is(fn, "function")) {
                    var fn2 = function (event) {
                        if (event.type != "mouseover" && event.type != "mouseout") {
                            return;
                        }

                        var reltg = event.relatedTarget ? event.relatedTarget :
                            event.type == "mouseout" ? event.toElement : event.fromElement;
                        while (reltg && reltg != this.node) reltg = reltg.parentNode;

                        if (reltg != this.node) {
                            return fn.apply(this, event);
                        }
                    };

                    if (event_name == "mouseenter") {
                        this.mouseover(fn2, scope);
                    } else {
                        this.mouseout(fn2, scope);
                    }
                }
                return this;
            };
        })(events[i]);
    }


    Element.prototype.mousewheel = function (fn, scope) {
        if (Snap.is(fn, "function")) {
            var el = this;
            var fn2 = function (event) {
                fn.apply(el, [event]);
            };
        }

        this.node.addEventListener(
            /Firefox/i.test(navigator.userAgent) ? "DOMMouseScroll" : "mousewheel",
            fn2);

        return this;
    };


    // Snap's attr function can be too slow for things like panning/zooming.
    // This is a function to directly update element attributes without going
    // through eve.
    Element.prototype.attribute = function(key, val) {
        if (val === undefined) {
            return this.node.getAttribute(key);
        } else {
            this.node.setAttribute(key, val);
            return this;
        }
    };

    Element.prototype.init_gadfly = function() {
        this.mouseenter(Gadfly.plot_mouseover)
            .mouseleave(Gadfly.plot_mouseout)
            .dblclick(Gadfly.plot_dblclick)
            .mousewheel(Gadfly.guide_background_scroll)
            .drag(Gadfly.guide_background_drag_onmove,
                  Gadfly.guide_background_drag_onstart,
                  Gadfly.guide_background_drag_onend);
        this.mouseenter(function (event) {
            init_pan_zoom(this.plotroot());
        });
        return this;
    };
});


// When the plot is moused over, emphasize the grid lines.
Gadfly.plot_mouseover = function(event) {
    var root = this.plotroot();

    var keyboard_zoom = function(event) {
        if (event.which == 187) { // plus
            increase_zoom_by_position(root, 0.1, true);
        } else if (event.which == 189) { // minus
            increase_zoom_by_position(root, -0.1, true);
        }
    };
    root.data("keyboard_zoom", keyboard_zoom);
    window.addEventListener("keyup", keyboard_zoom);

    var xgridlines = root.select(".xgridlines"),
        ygridlines = root.select(".ygridlines");

    xgridlines.data("unfocused_strokedash",
                    xgridlines.attribute("stroke-dasharray").replace(/(\d)(,|$)/g, "$1mm$2"));
    ygridlines.data("unfocused_strokedash",
                    ygridlines.attribute("stroke-dasharray").replace(/(\d)(,|$)/g, "$1mm$2"));

    // emphasize grid lines
    var destcolor = root.data("focused_xgrid_color");
    xgridlines.attribute("stroke-dasharray", "none")
              .selectAll("path")
              .animate({stroke: destcolor}, 250);

    destcolor = root.data("focused_ygrid_color");
    ygridlines.attribute("stroke-dasharray", "none")
              .selectAll("path")
              .animate({stroke: destcolor}, 250);

    // reveal zoom slider
    root.select(".zoomslider")
        .animate({opacity: 1.0}, 250);
};

// Reset pan and zoom on double click
Gadfly.plot_dblclick = function(event) {
  set_plot_pan_zoom(this.plotroot(), 0.0, 0.0, 1.0);
};

// Unemphasize grid lines on mouse out.
Gadfly.plot_mouseout = function(event) {
    var root = this.plotroot();

    window.removeEventListener("keyup", root.data("keyboard_zoom"));
    root.data("keyboard_zoom", undefined);

    var xgridlines = root.select(".xgridlines"),
        ygridlines = root.select(".ygridlines");

    var destcolor = root.data("unfocused_xgrid_color");

    xgridlines.attribute("stroke-dasharray", xgridlines.data("unfocused_strokedash"))
              .selectAll("path")
              .animate({stroke: destcolor}, 250);

    destcolor = root.data("unfocused_ygrid_color");
    ygridlines.attribute("stroke-dasharray", ygridlines.data("unfocused_strokedash"))
              .selectAll("path")
              .animate({stroke: destcolor}, 250);

    // hide zoom slider
    root.select(".zoomslider")
        .animate({opacity: 0.0}, 250);
};


var set_geometry_transform = function(root, tx, ty, scale) {
    var xscalable = root.hasClass("xscalable"),
        yscalable = root.hasClass("yscalable");

    var old_scale = root.data("scale");

    var xscale = xscalable ? scale : 1.0,
        yscale = yscalable ? scale : 1.0;

    tx = xscalable ? tx : 0.0;
    ty = yscalable ? ty : 0.0;

    var t = new Snap.Matrix().translate(tx, ty).scale(xscale, yscale);

    root.selectAll(".geometry, image")
        .forEach(function (element, i) {
            element.transform(t);
        });

    bounds = root.plotbounds();

    if (yscalable) {
        var xfixed_t = new Snap.Matrix().translate(0, ty).scale(1.0, yscale);
        root.selectAll(".xfixed")
            .forEach(function (element, i) {
                element.transform(xfixed_t);
            });

        root.select(".ylabels")
            .transform(xfixed_t)
            .selectAll("text")
            .forEach(function (element, i) {
                if (element.attribute("gadfly:inscale") == "true") {
                    var cx = element.asPX("x"),
                        cy = element.asPX("y");
                    var st = element.data("static_transform");
                    unscale_t = new Snap.Matrix();
                    unscale_t.scale(1, 1/scale, cx, cy).add(st);
                    element.transform(unscale_t);

                    var y = cy * scale + ty;
                    element.attr("visibility",
                        bounds.y0 <= y && y <= bounds.y1 ? "visible" : "hidden");
                }
            });
    }

    if (xscalable) {
        var yfixed_t = new Snap.Matrix().translate(tx, 0).scale(xscale, 1.0);
        var xtrans = new Snap.Matrix().translate(tx, 0);
        root.selectAll(".yfixed")
            .forEach(function (element, i) {
                element.transform(yfixed_t);
            });

        root.select(".xlabels")
            .transform(yfixed_t)
            .selectAll("text")
            .forEach(function (element, i) {
                if (element.attribute("gadfly:inscale") == "true") {
                    var cx = element.asPX("x"),
                        cy = element.asPX("y");
                    var st = element.data("static_transform");
                    unscale_t = new Snap.Matrix();
                    unscale_t.scale(1/scale, 1, cx, cy).add(st);

                    element.transform(unscale_t);

                    var x = cx * scale + tx;
                    element.attr("visibility",
                        bounds.x0 <= x && x <= bounds.x1 ? "visible" : "hidden");
                    }
            });
    }

    // we must unscale anything that is scale invariance: widths, raiduses, etc.
    var size_attribs = ["font-size"];
    var unscaled_selection = ".geometry, .geometry *";
    if (xscalable) {
        size_attribs.push("rx");
        unscaled_selection += ", .xgridlines";
    }
    if (yscalable) {
        size_attribs.push("ry");
        unscaled_selection += ", .ygridlines";
    }

    root.selectAll(unscaled_selection)
        .forEach(function (element, i) {
            // circle need special help
            if (element.node.nodeName == "circle") {
                var cx = element.attribute("cx"),
                    cy = element.attribute("cy");
                unscale_t = new Snap.Matrix().scale(1/xscale, 1/yscale,
                                                        cx, cy);
                element.transform(unscale_t);
                return;
            }

            for (i in size_attribs) {
                var key = size_attribs[i];
                var val = parseFloat(element.attribute(key));
                if (val !== undefined && val != 0 && !isNaN(val)) {
                    element.attribute(key, val * old_scale / scale);
                }
            }
        });
};


// Find the most appropriate tick scale and update label visibility.
var update_tickscale = function(root, scale, axis) {
    if (!root.hasClass(axis + "scalable")) return;

    var tickscales = root.data(axis + "tickscales");
    var best_tickscale = 1.0;
    var best_tickscale_dist = Infinity;
    for (tickscale in tickscales) {
        var dist = Math.abs(Math.log(tickscale) - Math.log(scale));
        if (dist < best_tickscale_dist) {
            best_tickscale_dist = dist;
            best_tickscale = tickscale;
        }
    }

    if (best_tickscale != root.data(axis + "tickscale")) {
        root.data(axis + "tickscale", best_tickscale);
        var mark_inscale_gridlines = function (element, i) {
            var inscale = element.attr("gadfly:scale") == best_tickscale;
            element.attribute("gadfly:inscale", inscale);
            element.attr("visibility", inscale ? "visible" : "hidden");
        };

        var mark_inscale_labels = function (element, i) {
            var inscale = element.attr("gadfly:scale") == best_tickscale;
            element.attribute("gadfly:inscale", inscale);
            element.attr("visibility", inscale ? "visible" : "hidden");
        };

        root.select("." + axis + "gridlines").selectAll("path").forEach(mark_inscale_gridlines);
        root.select("." + axis + "labels").selectAll("text").forEach(mark_inscale_labels);
    }
};


var set_plot_pan_zoom = function(root, tx, ty, scale) {
    var old_scale = root.data("scale");
    var bounds = root.plotbounds();

    var width = bounds.x1 - bounds.x0,
        height = bounds.y1 - bounds.y0;

    // compute the viewport derived from tx, ty, and scale
    var x_min = -width * scale - (scale * width - width),
        x_max = width * scale,
        y_min = -height * scale - (scale * height - height),
        y_max = height * scale;

    var x0 = bounds.x0 - scale * bounds.x0,
        y0 = bounds.y0 - scale * bounds.y0;

    var tx = Math.max(Math.min(tx - x0, x_max), x_min),
        ty = Math.max(Math.min(ty - y0, y_max), y_min);

    tx += x0;
    ty += y0;

    // when the scale change, we may need to alter which set of
    // ticks is being displayed
    if (scale != old_scale) {
        update_tickscale(root, scale, "x");
        update_tickscale(root, scale, "y");
    }

    set_geometry_transform(root, tx, ty, scale);

    root.data("scale", scale);
    root.data("tx", tx);
    root.data("ty", ty);
};


var scale_centered_translation = function(root, scale) {
    var bounds = root.plotbounds();

    var width = bounds.x1 - bounds.x0,
        height = bounds.y1 - bounds.y0;

    var tx0 = root.data("tx"),
        ty0 = root.data("ty");

    var scale0 = root.data("scale");

    // how off from center the current view is
    var xoff = tx0 - (bounds.x0 * (1 - scale0) + (width * (1 - scale0)) / 2),
        yoff = ty0 - (bounds.y0 * (1 - scale0) + (height * (1 - scale0)) / 2);

    // rescale offsets
    xoff = xoff * scale / scale0;
    yoff = yoff * scale / scale0;

    // adjust for the panel position being scaled
    var x_edge_adjust = bounds.x0 * (1 - scale),
        y_edge_adjust = bounds.y0 * (1 - scale);

    return {
        x: xoff + x_edge_adjust + (width - width * scale) / 2,
        y: yoff + y_edge_adjust + (height - height * scale) / 2
    };
};


// Initialize data for panning zooming if it isn't already.
var init_pan_zoom = function(root) {
    if (root.data("zoompan-ready")) {
        return;
    }

    // The non-scaling-stroke trick. Rather than try to correct for the
    // stroke-width when zooming, we force it to a fixed value.
    var px_per_mm = root.node.getCTM().a;

    // Drag events report deltas in pixels, which we'd like to convert to
    // millimeters.
    root.data("px_per_mm", px_per_mm);

    root.selectAll("path")
        .forEach(function (element, i) {
        sw = element.asPX("stroke-width") * px_per_mm;
        if (sw > 0) {
            element.attribute("stroke-width", sw);
            element.attribute("vector-effect", "non-scaling-stroke");
        }
    });

    // Store ticks labels original tranformation
    root.selectAll(".xlabels > text, .ylabels > text")
        .forEach(function (element, i) {
            var lm = element.transform().localMatrix;
            element.data("static_transform",
                new Snap.Matrix(lm.a, lm.b, lm.c, lm.d, lm.e, lm.f));
        });

    var xgridlines = root.select(".xgridlines");
    var ygridlines = root.select(".ygridlines");
    var xlabels = root.select(".xlabels");
    var ylabels = root.select(".ylabels");

    if (root.data("tx") === undefined) root.data("tx", 0);
    if (root.data("ty") === undefined) root.data("ty", 0);
    if (root.data("scale") === undefined) root.data("scale", 1.0);
    if (root.data("xtickscales") === undefined) {

        // index all the tick scales that are listed
        var xtickscales = {};
        var ytickscales = {};
        var add_x_tick_scales = function (element, i) {
            xtickscales[element.attribute("gadfly:scale")] = true;
        };
        var add_y_tick_scales = function (element, i) {
            ytickscales[element.attribute("gadfly:scale")] = true;
        };

        if (xgridlines) xgridlines.selectAll("path").forEach(add_x_tick_scales);
        if (ygridlines) ygridlines.selectAll("path").forEach(add_y_tick_scales);
        if (xlabels) xlabels.selectAll("text").forEach(add_x_tick_scales);
        if (ylabels) ylabels.selectAll("text").forEach(add_y_tick_scales);

        root.data("xtickscales", xtickscales);
        root.data("ytickscales", ytickscales);
        root.data("xtickscale", 1.0);
    }

    var min_scale = 1.0, max_scale = 1.0;
    for (scale in xtickscales) {
        min_scale = Math.min(min_scale, scale);
        max_scale = Math.max(max_scale, scale);
    }
    for (scale in ytickscales) {
        min_scale = Math.min(min_scale, scale);
        max_scale = Math.max(max_scale, scale);
    }
    root.data("min_scale", min_scale);
    root.data("max_scale", max_scale);

    // store the original positions of labels
    if (xlabels) {
        xlabels.selectAll("text")
               .forEach(function (element, i) {
                   element.data("x", element.asPX("x"));
               });
    }

    if (ylabels) {
        ylabels.selectAll("text")
               .forEach(function (element, i) {
                   element.data("y", element.asPX("y"));
               });
    }

    // mark grid lines and ticks as in or out of scale.
    var mark_inscale = function (element, i) {
        element.attribute("gadfly:inscale", element.attribute("gadfly:scale") == 1.0);
    };

    if (xgridlines) xgridlines.selectAll("path").forEach(mark_inscale);
    if (ygridlines) ygridlines.selectAll("path").forEach(mark_inscale);
    if (xlabels) xlabels.selectAll("text").forEach(mark_inscale);
    if (ylabels) ylabels.selectAll("text").forEach(mark_inscale);

    // figure out the upper ond lower bounds on panning using the maximum
    // and minum grid lines
    var bounds = root.plotbounds();
    var pan_bounds = {
        x0: 0.0,
        y0: 0.0,
        x1: 0.0,
        y1: 0.0
    };

    if (xgridlines) {
        xgridlines
            .selectAll("path")
            .forEach(function (element, i) {
                if (element.attribute("gadfly:inscale") == "true") {
                    var bbox = element.node.getBBox();
                    if (bounds.x1 - bbox.x < pan_bounds.x0) {
                        pan_bounds.x0 = bounds.x1 - bbox.x;
                    }
                    if (bounds.x0 - bbox.x > pan_bounds.x1) {
                        pan_bounds.x1 = bounds.x0 - bbox.x;
                    }
                    element.attr("visibility", "visible");
                }
            });
    }

    if (ygridlines) {
        ygridlines
            .selectAll("path")
            .forEach(function (element, i) {
                if (element.attribute("gadfly:inscale") == "true") {
                    var bbox = element.node.getBBox();
                    if (bounds.y1 - bbox.y < pan_bounds.y0) {
                        pan_bounds.y0 = bounds.y1 - bbox.y;
                    }
                    if (bounds.y0 - bbox.y > pan_bounds.y1) {
                        pan_bounds.y1 = bounds.y0 - bbox.y;
                    }
                    element.attr("visibility", "visible");
                }
            });
    }

    // nudge these values a little
    pan_bounds.x0 -= 5;
    pan_bounds.x1 += 5;
    pan_bounds.y0 -= 5;
    pan_bounds.y1 += 5;
    root.data("pan_bounds", pan_bounds);

    root.data("zoompan-ready", true)
};


// drag actions, i.e. zooming and panning
var pan_action = {
    start: function(root, x, y, event) {
        root.data("dx", 0);
        root.data("dy", 0);
        root.data("tx0", root.data("tx"));
        root.data("ty0", root.data("ty"));
    },
    update: function(root, dx, dy, x, y, event) {
        var px_per_mm = root.data("px_per_mm");
        dx /= px_per_mm;
        dy /= px_per_mm;

        var tx0 = root.data("tx"),
            ty0 = root.data("ty");

        var dx0 = root.data("dx"),
            dy0 = root.data("dy");

        root.data("dx", dx);
        root.data("dy", dy);

        dx = dx - dx0;
        dy = dy - dy0;

        var tx = tx0 + dx,
            ty = ty0 + dy;

        set_plot_pan_zoom(root, tx, ty, root.data("scale"));
    },
    end: function(root, event) {

    },
    cancel: function(root) {
        set_plot_pan_zoom(root, root.data("tx0"), root.data("ty0"), root.data("scale"));
    }
};

var zoom_box;
var zoom_action = {
    start: function(root, x, y, event) {
        var bounds = root.plotbounds();
        var width = bounds.x1 - bounds.x0,
            height = bounds.y1 - bounds.y0;
        var ratio = width / height;
        var xscalable = root.hasClass("xscalable"),
            yscalable = root.hasClass("yscalable");
        var px_per_mm = root.data("px_per_mm");
        x = xscalable ? x / px_per_mm : bounds.x0;
        y = yscalable ? y / px_per_mm : bounds.y0;
        var w = xscalable ? 0 : width;
        var h = yscalable ? 0 : height;
        zoom_box = root.rect(x, y, w, h).attr({
            "fill": "#000",
            "opacity": 0.25
        });
        zoom_box.data("ratio", ratio);
    },
    update: function(root, dx, dy, x, y, event) {
        var xscalable = root.hasClass("xscalable"),
            yscalable = root.hasClass("yscalable");
        var px_per_mm = root.data("px_per_mm");
        var bounds = root.plotbounds();
        if (yscalable) {
            y /= px_per_mm;
            y = Math.max(bounds.y0, y);
            y = Math.min(bounds.y1, y);
        } else {
            y = bounds.y1;
        }
        if (xscalable) {
            x /= px_per_mm;
            x = Math.max(bounds.x0, x);
            x = Math.min(bounds.x1, x);
        } else {
            x = bounds.x1;
        }

        dx = x - zoom_box.attr("x");
        dy = y - zoom_box.attr("y");
        if (xscalable && yscalable) {
            var ratio = zoom_box.data("ratio");
            var width = Math.min(Math.abs(dx), ratio * Math.abs(dy));
            var height = Math.min(Math.abs(dy), Math.abs(dx) / ratio);
            dx = width * dx / Math.abs(dx);
            dy = height * dy / Math.abs(dy);
        }
        var xoffset = 0,
            yoffset = 0;
        if (dx < 0) {
            xoffset = dx;
            dx = -1 * dx;
        }
        if (dy < 0) {
            yoffset = dy;
            dy = -1 * dy;
        }
        if (isNaN(dy)) {
            dy = 0.0;
        }
        if (isNaN(dx)) {
            dx = 0.0;
        }
        zoom_box.transform("T" + xoffset + "," + yoffset);
        zoom_box.attr("width", dx);
        zoom_box.attr("height", dy);
    },
    end: function(root, event) {
        var xscalable = root.hasClass("xscalable"),
            yscalable = root.hasClass("yscalable");
        var zoom_bounds = zoom_box.getBBox();
        if (zoom_bounds.width * zoom_bounds.height <= 0) {
            return;
        }
        var plot_bounds = root.plotbounds();
        var zoom_factor = 1.0;
        if (yscalable) {
            zoom_factor = (plot_bounds.y1 - plot_bounds.y0) / zoom_bounds.height;
        } else {
            zoom_factor = (plot_bounds.x1 - plot_bounds.x0) / zoom_bounds.width;
        }
        var tx = (root.data("tx") - zoom_bounds.x) * zoom_factor + plot_bounds.x0,
            ty = (root.data("ty") - zoom_bounds.y) * zoom_factor + plot_bounds.y0;
        set_plot_pan_zoom(root, tx, ty, root.data("scale") * zoom_factor);
        zoom_box.remove();
    },
    cancel: function(root) {
        zoom_box.remove();
    }
};


Gadfly.guide_background_drag_onstart = function(x, y, event) {
    var root = this.plotroot();
    var scalable = root.hasClass("xscalable") || root.hasClass("yscalable");
    var zoomable = !event.altKey && !event.ctrlKey && event.shiftKey && scalable;
    var panable = !event.altKey && !event.ctrlKey && !event.shiftKey && scalable;
    var drag_action = zoomable ? zoom_action :
                      panable  ? pan_action :
                                 undefined;
    root.data("drag_action", drag_action);
    if (drag_action) {
        var cancel_drag_action = function(event) {
            if (event.which == 27) { // esc key
                drag_action.cancel(root);
                root.data("drag_action", undefined);
            }
        };
        window.addEventListener("keyup", cancel_drag_action);
        root.data("cancel_drag_action", cancel_drag_action);
        drag_action.start(root, x, y, event);
    }
};


Gadfly.guide_background_drag_onmove = function(dx, dy, x, y, event) {
    var root = this.plotroot();
    var drag_action = root.data("drag_action");
    if (drag_action) {
        drag_action.update(root, dx, dy, x, y, event);
    }
};


Gadfly.guide_background_drag_onend = function(event) {
    var root = this.plotroot();
    window.removeEventListener("keyup", root.data("cancel_drag_action"));
    root.data("cancel_drag_action", undefined);
    var drag_action = root.data("drag_action");
    if (drag_action) {
        drag_action.end(root, event);
    }
    root.data("drag_action", undefined);
};


Gadfly.guide_background_scroll = function(event) {
    if (event.shiftKey) {
        increase_zoom_by_position(this.plotroot(), 0.001 * event.wheelDelta);
        event.preventDefault();
    }
};


Gadfly.zoomslider_button_mouseover = function(event) {
    this.select(".button_logo")
         .animate({fill: this.data("mouseover_color")}, 100);
};


Gadfly.zoomslider_button_mouseout = function(event) {
     this.select(".button_logo")
         .animate({fill: this.data("mouseout_color")}, 100);
};


Gadfly.zoomslider_zoomout_click = function(event) {
    increase_zoom_by_position(this.plotroot(), -0.1, true);
};


Gadfly.zoomslider_zoomin_click = function(event) {
    increase_zoom_by_position(this.plotroot(), 0.1, true);
};


Gadfly.zoomslider_track_click = function(event) {
    // TODO
};


// Map slider position x to scale y using the function y = a*exp(b*x)+c.
// The constants a, b, and c are solved using the constraint that the function
// should go through the points (0; min_scale), (0.5; 1), and (1; max_scale).
var scale_from_slider_position = function(position, min_scale, max_scale) {
    var a = (1 - 2 * min_scale + min_scale * min_scale) / (min_scale + max_scale - 2),
        b = 2 * Math.log((max_scale - 1) / (1 - min_scale)),
        c = (min_scale * max_scale - 1) / (min_scale + max_scale - 2);
    return a * Math.exp(b * position) + c;
}

// inverse of scale_from_slider_position
var slider_position_from_scale = function(scale, min_scale, max_scale) {
    var a = (1 - 2 * min_scale + min_scale * min_scale) / (min_scale + max_scale - 2),
        b = 2 * Math.log((max_scale - 1) / (1 - min_scale)),
        c = (min_scale * max_scale - 1) / (min_scale + max_scale - 2);
    return 1 / b * Math.log((scale - c) / a);
}

var increase_zoom_by_position = function(root, delta_position, animate) {
    var scale = root.data("scale"),
        min_scale = root.data("min_scale"),
        max_scale = root.data("max_scale");
    var position = slider_position_from_scale(scale, min_scale, max_scale);
    position += delta_position;
    scale = scale_from_slider_position(position, min_scale, max_scale);
    set_zoom(root, scale, animate);
}

var set_zoom = function(root, scale, animate) {
    var min_scale = root.data("min_scale"),
        max_scale = root.data("max_scale"),
        old_scale = root.data("scale");
    var new_scale = Math.max(min_scale, Math.min(scale, max_scale));
    if (animate) {
        Snap.animate(
            old_scale,
            new_scale,
            function (new_scale) {
                update_plot_scale(root, new_scale);
            },
            200);
    } else {
        update_plot_scale(root, new_scale);
    }
}


var update_plot_scale = function(root, new_scale) {
    var trans = scale_centered_translation(root, new_scale);
    set_plot_pan_zoom(root, trans.x, trans.y, new_scale);

    root.selectAll(".zoomslider_thumb")
        .forEach(function (element, i) {
            var min_pos = element.data("min_pos"),
                max_pos = element.data("max_pos"),
                min_scale = root.data("min_scale"),
                max_scale = root.data("max_scale");
            var xmid = (min_pos + max_pos) / 2;
            var xpos = slider_position_from_scale(new_scale, min_scale, max_scale);
            element.transform(new Snap.Matrix().translate(
                Math.max(min_pos, Math.min(
                         max_pos, min_pos + (max_pos - min_pos) * xpos)) - xmid, 0));
    });
};


Gadfly.zoomslider_thumb_dragmove = function(dx, dy, x, y, event) {
    var root = this.plotroot();
    var min_pos = this.data("min_pos"),
        max_pos = this.data("max_pos"),
        min_scale = root.data("min_scale"),
        max_scale = root.data("max_scale"),
        old_scale = root.data("old_scale");

    var px_per_mm = root.data("px_per_mm");
    dx /= px_per_mm;
    dy /= px_per_mm;

    var xmid = (min_pos + max_pos) / 2;
    var xpos = slider_position_from_scale(old_scale, min_scale, max_scale) +
                   dx / (max_pos - min_pos);

    // compute the new scale
    var new_scale = scale_from_slider_position(xpos, min_scale, max_scale);
    new_scale = Math.min(max_scale, Math.max(min_scale, new_scale));

    update_plot_scale(root, new_scale);
    event.stopPropagation();
};


Gadfly.zoomslider_thumb_dragstart = function(x, y, event) {
    this.animate({fill: this.data("mouseover_color")}, 100);
    var root = this.plotroot();

    // keep track of what the scale was when we started dragging
    root.data("old_scale", root.data("scale"));
    event.stopPropagation();
};


Gadfly.zoomslider_thumb_dragend = function(event) {
    this.animate({fill: this.data("mouseout_color")}, 100);
    event.stopPropagation();
};


var toggle_color_class = function(root, color_class, ison) {
    var guides = root.selectAll(".guide." + color_class + ",.guide ." + color_class);
    var geoms = root.selectAll(".geometry." + color_class + ",.geometry ." + color_class);
    if (ison) {
        guides.animate({opacity: 0.5}, 250);
        geoms.animate({opacity: 0.0}, 250);
    } else {
        guides.animate({opacity: 1.0}, 250);
        geoms.animate({opacity: 1.0}, 250);
    }
};


Gadfly.colorkey_swatch_click = function(event) {
    var root = this.plotroot();
    var color_class = this.data("color_class");

    if (event.shiftKey) {
        root.selectAll(".colorkey text")
            .forEach(function (element) {
                var other_color_class = element.data("color_class");
                if (other_color_class != color_class) {
                    toggle_color_class(root, other_color_class,
                                       element.attr("opacity") == 1.0);
                }
            });
    } else {
        toggle_color_class(root, color_class, this.attr("opacity") == 1.0);
    }
};


return Gadfly;

}));


//@ sourceURL=gadfly.js

(function (glob, factory) {
    // AMD support
      if (typeof require === "function" && typeof define === "function" && define.amd) {
        require(["Snap.svg", "Gadfly"], function (Snap, Gadfly) {
            factory(Snap, Gadfly);
        });
      } else {
          factory(glob.Snap, glob.Gadfly);
      }
})(window, function (Snap, Gadfly) {
    var fig = Snap("#img-0cadd079");
fig.select("#img-0cadd079-5")
   .init_gadfly();
fig.select("#img-0cadd079-7")
   .plotroot().data("unfocused_ygrid_color", "#D0D0E0")
;
fig.select("#img-0cadd079-7")
   .plotroot().data("focused_ygrid_color", "#A0A0A0")
;
fig.select("#img-0cadd079-8")
   .plotroot().data("unfocused_xgrid_color", "#D0D0E0")
;
fig.select("#img-0cadd079-8")
   .plotroot().data("focused_xgrid_color", "#A0A0A0")
;
fig.select("#img-0cadd079-12")
   .data("mouseover_color", "#CD5C5C")
;
fig.select("#img-0cadd079-12")
   .data("mouseout_color", "#6A6A6A")
;
fig.select("#img-0cadd079-12")
   .click(Gadfly.zoomslider_zoomin_click)
.mouseenter(Gadfly.zoomslider_button_mouseover)
.mouseleave(Gadfly.zoomslider_button_mouseout)
;
fig.select("#img-0cadd079-14")
   .data("max_pos", 131.4)
;
fig.select("#img-0cadd079-14")
   .data("min_pos", 114.4)
;
fig.select("#img-0cadd079-14")
   .click(Gadfly.zoomslider_track_click);
fig.select("#img-0cadd079-15")
   .data("max_pos", 131.4)
;
fig.select("#img-0cadd079-15")
   .data("min_pos", 114.4)
;
fig.select("#img-0cadd079-15")
   .data("mouseover_color", "#CD5C5C")
;
fig.select("#img-0cadd079-15")
   .data("mouseout_color", "#6A6A6A")
;
fig.select("#img-0cadd079-15")
   .drag(Gadfly.zoomslider_thumb_dragmove,
     Gadfly.zoomslider_thumb_dragstart,
     Gadfly.zoomslider_thumb_dragend)
;
fig.select("#img-0cadd079-16")
   .data("mouseover_color", "#CD5C5C")
;
fig.select("#img-0cadd079-16")
   .data("mouseout_color", "#6A6A6A")
;
fig.select("#img-0cadd079-16")
   .click(Gadfly.zoomslider_zoomout_click)
.mouseenter(Gadfly.zoomslider_button_mouseover)
.mouseleave(Gadfly.zoomslider_button_mouseout)
;
    });
]]> </script>
</svg>
